{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {};\nexport const baerInitializeSlice = createSlice({\n  name: 'baerInitialize',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {}\n});\nexport default baerInitializeSlice.reducer;","map":{"version":3,"sources":["E:/Infiltrometer/infiltrometer21/src/features/baer-initialize/bear-initializeSlice.js"],"names":["createAsyncThunk","createSlice","initialState","baerInitializeSlice","name","reducers","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAGA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,mBAAmB,GAAGF,WAAW,CAAC;AAC3CG,EAAAA,IAAI,EAAE,gBADqC;AAE7CF,EAAAA,YAF6C;AAG7C;AACAG,EAAAA,QAAQ,EAAE;AAJmC,CAAD,CAAvC;AAMP,eAAeF,mBAAmB,CAACG,OAAnC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = {};\r\n\r\nexport const baerInitializeSlice = createSlice({\r\n    name: 'baerInitialize',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {}\r\n});\r\nexport default baerInitializeSlice.reducer;"]},"metadata":{},"sourceType":"module"}