[{"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\index.js":"1","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\serviceWorker.js":"2","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\App.js":"3","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\app\\store.js":"4","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\ShowReportsButon.js":"5","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\redirector-slice.js":"6","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\navBar\\NavBar.js":"7","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsSlice.js":"8","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\Redirector.js":"9","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\bear-initializeSlice.js":"10","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\BaerInitializeView.js":"11","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\BaerReplicationView.js":"12","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\bear-replicationSlice.js":"13","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\BaerResultsView.js":"14","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\bear-resultsSlice.js":"15","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\RegressionTesting.js":"16","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterSlice.js":"17","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\protocols.js":"18","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\app\\soilTypes.js":"19","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\table.js":"20","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\app\\infiltrometerType.js":"21","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterAPI.js":"22","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\regression-js.js":"23"},{"size":707,"mtime":1632591552516,"results":"24","hashOfConfig":"25"},{"size":5151,"mtime":1632591545509,"results":"26","hashOfConfig":"25"},{"size":1912,"mtime":1633537773283,"results":"27","hashOfConfig":"25"},{"size":946,"mtime":1633015101849,"results":"28","hashOfConfig":"25"},{"size":504,"mtime":1632591545507,"results":"29","hashOfConfig":"25"},{"size":547,"mtime":1632672160763,"results":"30","hashOfConfig":"25"},{"size":2182,"mtime":1633537773290,"results":"31","hashOfConfig":"25"},{"size":1813,"mtime":1633537773295,"results":"32","hashOfConfig":"25"},{"size":657,"mtime":1633367672700,"results":"33","hashOfConfig":"25"},{"size":2364,"mtime":1633537773285,"results":"34","hashOfConfig":"25"},{"size":10330,"mtime":1633543202891,"results":"35","hashOfConfig":"25"},{"size":5242,"mtime":1633537773289,"results":"36","hashOfConfig":"25"},{"size":1182,"mtime":1633015101860,"results":"37","hashOfConfig":"25"},{"size":1412,"mtime":1633367672699,"results":"38","hashOfConfig":"25"},{"size":393,"mtime":1633015101866,"results":"39","hashOfConfig":"25"},{"size":1085,"mtime":1632591545506,"results":"40","hashOfConfig":"25"},{"size":2819,"mtime":1632591545505,"results":"41","hashOfConfig":"25"},{"size":175,"mtime":1632591545507,"results":"42","hashOfConfig":"25"},{"size":1117,"mtime":1632780783465,"results":"43","hashOfConfig":"25"},{"size":3206,"mtime":1633015101875,"results":"44","hashOfConfig":"25"},{"size":202,"mtime":1633367672696,"results":"45","hashOfConfig":"25"},{"size":202,"mtime":1632591545504,"results":"46","hashOfConfig":"25"},{"size":9271,"mtime":1632591545506,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1i4jf6k",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\index.js",[],["102","103"],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\serviceWorker.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\App.js",["104","105"],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\app\\store.js",["106"],"import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport baerInitializeReducer from '../features/baer/baer-initialize/bear-initializeSlice';\r\nimport baerReplicationReducer from '../features/baer/baer-replication/bear-replicationSlice';\r\nimport baerResultsReducer from '../features/baer/baer-results/bear-resultsSlice';\r\nimport reportsSlice from '../features/reports/reportsSlice';\r\nimport {reducer as reduxFormReducer} from 'redux-form'\r\nimport  redirectReducer  from '../features/page-redirection/redirector-slice';\r\n\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    baerInitialize: baerInitializeReducer,\r\n    baerReplication: baerReplicationReducer,\r\n    baerResults: baerResultsReducer,\r\n    counter: counterReducer,\r\n    reports: reportsSlice,\r\n    form: reduxFormReducer,\r\n    redirector: redirectReducer\r\n  },\r\n});\r\n","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\ShowReportsButon.js",["107","108","109"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {selectReports\r\n} from './reportsSlice';\r\n\r\nlet reports;\r\nfunction PrintReports(){\r\n  reports = useSelector(selectReports)\r\n  console.log(reports);\r\n}\r\n\r\nexport function ShowReportsButton() {\r\n    const reports = useSelector(selectReports);\r\n\r\n    return(\r\n    <div>\r\n        <button onClick={()=>console.log(reports)}>\r\n            Show Reports in Store\r\n        </button>\r\n    </div>\r\n\r\n  );\r\n\r\n}","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\redirector-slice.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\navBar\\NavBar.js",["110","111","112","113"],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsSlice.js",["114"],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\Redirector.js",["115","116","117"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectPage, setPage } from \"./redirector-slice\";\r\nimport { useLocation, Redirect } from \"react-router\";\r\nimport { Route } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n//Used to redirect to new pages from global state\r\n export const Redirector = () =>{\r\n\r\n    const curPage = useLocation().pathname;\r\n    const page = useSelector(selectPage);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    //reset the page\r\n    if (curPage == page) {\r\n        dispatch(setPage(null));\r\n        return null;\r\n    }\r\n    \r\n    \r\n\r\n    return page!=null ? <Redirect to ={page}/> : null;\r\n  }\r\n","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\bear-initializeSlice.js",["118","119","120"],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\BaerInitializeView.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\BaerReplicationView.js",["140","141","142","143","144","145","146","147","148","149"],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\bear-replicationSlice.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\BaerResultsView.js",["150","151"],"//The Page we are displaying for the baer Initialize view\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {selectReports} from \"../../reports/reportsSlice\";\r\nimport Table from \"./table\";\r\nimport { setPage } from '../../page-redirection/redirector-slice';\r\n\r\n\r\nconst  BaerResultsView = ()=> {\r\n  const reports = useSelector(selectReports);\r\n  const dispatch = useDispatch();\r\n\r\n  return (<div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2\"></div>\r\n        <div class=\"col-sm-8 text-lg-center\">\r\n          <h1>Baer Results View</h1>\r\n\r\n        </div>\r\n        <div class=\"col-sm-2\"></div>\r\n\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2\"></div>\r\n        <div class=\"col-sm-8\">\r\n          <div class=\"container\">\r\n              <Table></Table>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-2\"></div>\r\n      </div>\r\n      <div className=\"row\">\r\n          <div className=\"col-sm-2\"></div>\r\n          <div className=\"col-sm-8 text-lg-center\">\r\n              <button class=\"btn btn-dark\" onClick ={\r\n                ()=>dispatch(setPage(\"/Infiltrometer/baer-initialize\"))\r\n              }>  \r\n              New Test</button>\r\n          \r\n          </div>\r\n          <div className=\"col-sm-2\"></div>\r\n      </div>\r\n    </div>);\r\n}\r\nexport default BaerResultsView;","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\bear-resultsSlice.js",["152"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\nconst initialState = {\r\n    volume: 0,\r\n    secondsElapsed: 0,\r\n};\r\n\r\nexport const baerResultsSlice = createSlice({\r\n    name: 'baerResults',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n});\r\nexport default baerResultsSlice.reducer;","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\RegressionTesting.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterSlice.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\protocols.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\app\\soilTypes.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\table.js",["153","154","155","156"],"import React, {Component, useEffect, useState} from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectCurId, selectReports} from \"../../reports/reportsSlice\";\r\n\r\nconst Table =()=> {\r\n    const rawReports = useSelector(selectReports);\r\n\r\n    const curReport = rawReports[useSelector(selectCurId)];\r\n\r\n\r\n    const [state, setState] = useState(filterReadings());\r\n\r\n    /**\r\n     * Find ml/min for a reading\r\n     * @param {The current reading index} i\r\n     */\r\n    function findRate(i){\r\n        if(i>0){\r\n\r\n            let deltaV = curReport.readings[i-1].volume - curReport.readings[i].volume;\r\n            let deltaT = curReport.readings[i].secondsElapsed - curReport.readings[i-1].secondsElapsed;\r\n            return (deltaV)/(deltaT/60);\r\n        }\r\n        else{\r\n            return 0;\r\n        }\r\n    }\r\n    /**\r\n     * Create an array to use for a table row from reading data\r\n     */\r\n    function filterReadings(){\r\n        let readingsArr = [];\r\n        for(let i = 0; i < curReport.readings.length; i++){\r\n            readingsArr[i] = {\r\n\r\n                id: i,\r\n                Time: curReport.readings[i].secondsElapsed,\r\n                Volume: curReport.readings[i].volume,\r\n                Rate: findRate(i)\r\n\r\n            };\r\n        }\r\n        return {reports: readingsArr};\r\n    }\r\n\r\n    /**\r\n     * map state to table elements\r\n     */\r\n    function renderTableData() {\r\n        return filterReadings().reports.map((report, index) => {\r\n            const {id, Time, Volume,Rate} = report //destructuring\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{id}</td>\r\n                    <td>{Time}</td>\r\n                    <td>{Volume}</td>\r\n                    <td>{Rate}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    /**\r\n     * create header for table\r\n     */\r\n    function renderTableHeader() {\r\n        let header = Object.keys(state.reports[0])\r\n        return header.map((key, index) => {\r\n            console.log(key.toUpperCase())\r\n            if (key.toUpperCase() === \"ID\") {\r\n                return <th key={index}>{key.toUpperCase()}</th>\r\n            }\r\n            if (key.toUpperCase() === \"TIME\") {\r\n                return <th key={index}>{key.toUpperCase() + \" (s)\"}</th>\r\n            }\r\n\r\n\r\n            if (key.toUpperCase() === \"VOLUME\") {\r\n                return <th key={index}>{key.toUpperCase() + \" (mL)\"}</th>\r\n            }\r\n            if (key.toUpperCase() === \"RATE\") {\r\n                return <th key={index}>{key.toUpperCase() + \" (mL/min)\"}</th>\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n     //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\r\n        return (\r\n            <div>\r\n                <table class=\"table table-light table-striped table-hover\" id='students'>\r\n                    <tbody>\r\n                    <tr class=\"table-dark\">{renderTableHeader()}</tr>\r\n                    {renderTableData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\n\r\nexport default Table //exporting a component make it reusable and this is the beauty of react","C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\app\\infiltrometerType.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterAPI.js",[],"C:\\Users\\caboo\\OneDrive\\Documents\\GitHub\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\regression-js.js",["157"],"const DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\r\n\r\n/**\r\n* Determine the coefficient of determination (r^2) of a fit from the observations\r\n* and predictions.\r\n*\r\n* @param {Array<Array<number>>} data - Pairs of observed x-y values\r\n* @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\r\n*\r\n* @return {number} - The r^2 value, or NaN if one cannot be calculated.\r\n*/\r\nfunction determinationCoefficient(data, results) {\r\n  const predictions = [];\r\n  const observations = [];\r\n\r\n  data.forEach((d, i) => {\r\n    if (d[1] !== null) {\r\n      observations.push(d);\r\n      predictions.push(results[i]);\r\n    }\r\n  });\r\n\r\n  const sum = observations.reduce((a, observation) => a + observation[1], 0);\r\n  const mean = sum / observations.length;\r\n\r\n  const ssyy = observations.reduce((a, observation) => {\r\n    const difference = observation[1] - mean;\r\n    return a + (difference * difference);\r\n  }, 0);\r\n\r\n  const sse = observations.reduce((accum, observation, index) => {\r\n    const prediction = predictions[index];\r\n    const residual = observation[1] - prediction[1];\r\n    return accum + (residual * residual);\r\n  }, 0);\r\n\r\n  return 1 - (sse / ssyy);\r\n}\r\n\r\n/**\r\n* Determine the solution of a system of linear equations A * x = b using\r\n* Gaussian elimination.\r\n*\r\n* @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\r\n* @param {number} order - How many degrees to solve for\r\n*\r\n* @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\r\n*/\r\nfunction gaussianElimination(input, order) {\r\n  const matrix = input;\r\n  const n = input.length - 1;\r\n  const coefficients = [order];\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    let maxrow = i;\r\n    for (let j = i + 1; j < n; j++) {\r\n      if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\r\n        maxrow = j;\r\n      }\r\n    }\r\n\r\n    for (let k = i; k < n + 1; k++) {\r\n      const tmp = matrix[k][i];\r\n      matrix[k][i] = matrix[k][maxrow];\r\n      matrix[k][maxrow] = tmp;\r\n    }\r\n\r\n    for (let j = i + 1; j < n; j++) {\r\n      for (let k = n; k >= i; k--) {\r\n        matrix[k][j] -= (matrix[k][i] * matrix[i][j]) / matrix[i][i];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let j = n - 1; j >= 0; j--) {\r\n    let total = 0;\r\n    for (let k = j + 1; k < n; k++) {\r\n      total += matrix[k][j] * coefficients[k];\r\n    }\r\n\r\n    coefficients[j] = (matrix[n][j] - total) / matrix[j][j];\r\n  }\r\n\r\n  return coefficients;\r\n}\r\n\r\n/**\r\n* Round a number to a precision, specificed in number of decimal places\r\n*\r\n* @param {number} number - The number to round\r\n* @param {number} precision - The number of decimal places to round to:\r\n*                             > 0 means decimals, < 0 means powers of 10\r\n*\r\n*\r\n* @return {numbr} - The number, rounded\r\n*/\r\nfunction round(number, precision) {\r\n  const factor = 10 ** precision;\r\n  return Math.round(number * factor) / factor;\r\n}\r\n\r\n/**\r\n* The set of all fitting methods\r\n*\r\n* @namespace\r\n*/\r\nexport const methods = {\r\n  linear(data, options) {\r\n    const sum = [0, 0, 0, 0, 0];\r\n    let len = 0;\r\n\r\n    for (let n = 0; n < data.length; n++) {\r\n      if (data[n][1] !== null) {\r\n        len++;\r\n        sum[0] += data[n][0];\r\n        sum[1] += data[n][1];\r\n        sum[2] += data[n][0] * data[n][0];\r\n        sum[3] += data[n][0] * data[n][1];\r\n        sum[4] += data[n][1] * data[n][1];\r\n      }\r\n    }\r\n\r\n    const run = ((len * sum[2]) - (sum[0] * sum[0]));\r\n    const rise = ((len * sum[3]) - (sum[0] * sum[1]));\r\n    const gradient = run === 0 ? 0 : round(rise / run, options.precision);\r\n    const intercept = round((sum[1] / len) - ((gradient * sum[0]) / len), options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round((gradient * x) + intercept, options.precision)]\r\n    );\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [gradient, intercept],\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n      string: intercept === 0 ? `y = ${gradient}x` : `y = ${gradient}x + ${intercept}`,\r\n    };\r\n  },\r\n\r\n  exponential(data, options) {\r\n    const sum = [0, 0, 0, 0, 0, 0];\r\n\r\n    for (let n = 0; n < data.length; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += data[n][0];\r\n        sum[1] += data[n][1];\r\n        sum[2] += data[n][0] * data[n][0] * data[n][1];\r\n        sum[3] += data[n][1] * Math.log(data[n][1]);\r\n        sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\r\n        sum[5] += data[n][0] * data[n][1];\r\n      }\r\n    }\r\n\r\n    const denominator = ((sum[1] * sum[2]) - (sum[5] * sum[5]));\r\n    const a = Math.exp(((sum[2] * sum[3]) - (sum[5] * sum[4])) / denominator);\r\n    const b = ((sum[1] * sum[4]) - (sum[5] * sum[3])) / denominator;\r\n    const coeffA = round(a, options.precision);\r\n    const coeffB = round(b, options.precision);\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(coeffA * Math.exp(coeffB * x), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA}e^(${coeffB}x)`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  logarithmic(data, options) {\r\n    const sum = [0, 0, 0, 0];\r\n    const len = data.length;\r\n\r\n    for (let n = 0; n < len; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += Math.log(data[n][0]);\r\n        sum[1] += data[n][1] * Math.log(data[n][0]);\r\n        sum[2] += data[n][1];\r\n        sum[3] += (Math.log(data[n][0]) ** 2);\r\n      }\r\n    }\r\n\r\n    const a = ((len * sum[1]) - (sum[2] * sum[0])) / ((len * sum[3]) - (sum[0] * sum[0]));\r\n    const coeffB = round(a, options.precision);\r\n    const coeffA = round((sum[2] - (coeffB * sum[0])) / len, options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(round(coeffA + (coeffB * Math.log(x)), options.precision), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA} + ${coeffB} ln(x)`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  power(data, options) {\r\n    const sum = [0, 0, 0, 0, 0];\r\n    const len = data.length;\r\n\r\n    for (let n = 0; n < len; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += Math.log(data[n][0]);\r\n        sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\r\n        sum[2] += Math.log(data[n][1]);\r\n        sum[3] += (Math.log(data[n][0]) ** 2);\r\n      }\r\n    }\r\n\r\n    const b = ((len * sum[1]) - (sum[0] * sum[2])) / ((len * sum[3]) - (sum[0] ** 2));\r\n    const a = ((sum[2] - (b * sum[0])) / len);\r\n    const coeffA = round(Math.exp(a), options.precision);\r\n    const coeffB = round(b, options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(round(coeffA * (x ** coeffB), options.precision), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA}x^${coeffB}`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  polynomial(data, options) {\r\n    const lhs = [];\r\n    const rhs = [];\r\n    let a = 0;\r\n    let b = 0;\r\n\r\n    const len = data.length;\r\n    const k = options.order + 1;\r\n\r\n    for (let i = 1; i < k; i++) {\r\n      for (let l = 0; l < len; l++) {\r\n        if (data[l][1] !== null) {\r\n          a += (data[l][0] ** i) * data[l][1];\r\n        }\r\n      }\r\n\r\n      lhs.push(a);\r\n      a = 0;\r\n\r\n      const c = [];\r\n      for (let j = 1; j < k; j++) {\r\n        for (let l = 0; l < len; l++) {\r\n          if (data[l][1] !== null) {\r\n            b += data[l][0] ** (i + j);\r\n          }\r\n        }\r\n        c.push(b);\r\n        b = 0;\r\n      }\r\n      rhs.push(c);\r\n    }\r\n    rhs.push(lhs);\r\n\r\n    const coefficients = [0,...gaussianElimination(rhs, k).map(v => round(v, options.precision))];\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(\r\n        coefficients.reduce((sum, coeff, power) => sum + (coeff * (x ** power)), 0),\r\n        options.precision,\r\n      ),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    let string = 'y = ';\r\n    for (let i = coefficients.length - 1; i >= 0; i--) {\r\n      if (i > 1) {\r\n        string += `${coefficients[i]}x^${i} + `;\r\n      } else if (i === 1) {\r\n        string += `${coefficients[i]}x + `;\r\n      } else {\r\n        string += coefficients[i];\r\n      }\r\n    }\r\n\r\n    return {\r\n      string,\r\n      points,\r\n      predict,\r\n      equation: [...coefficients].reverse(),\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n};\r\n\r\nfunction createWrapper() {\r\n  const reduce = (accumulator, name) => ({\r\n    _round: round,\r\n    ...accumulator,\r\n    [name](data, supplied) {\r\n      return methods[name](data, {\r\n        ...DEFAULT_OPTIONS,\r\n        ...supplied,\r\n      });\r\n    },\r\n  });\r\n\r\n  return Object.keys(methods).reduce(reduce, {});\r\n}\r\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":3,"column":40,"nodeType":"164","messageId":"165","endLine":3,"endColumn":44},{"ruleId":"162","severity":1,"message":"166","line":7,"column":10,"nodeType":"164","messageId":"165","endLine":7,"endColumn":27},{"ruleId":"162","severity":1,"message":"167","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":25},{"ruleId":"162","severity":1,"message":"168","line":1,"column":17,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"169","line":2,"column":23,"nodeType":"164","messageId":"165","endLine":2,"endColumn":34},{"ruleId":"162","severity":1,"message":"170","line":7,"column":10,"nodeType":"164","messageId":"165","endLine":7,"endColumn":22},{"ruleId":"162","severity":1,"message":"171","line":2,"column":23,"nodeType":"164","messageId":"165","endLine":2,"endColumn":34},{"ruleId":"162","severity":1,"message":"172","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":20},{"ruleId":"162","severity":1,"message":"173","line":13,"column":12,"nodeType":"164","messageId":"165","endLine":13,"endColumn":17},{"ruleId":"162","severity":1,"message":"174","line":13,"column":19,"nodeType":"164","messageId":"165","endLine":13,"endColumn":27},{"ruleId":"162","severity":1,"message":"175","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"176","line":4,"column":10,"nodeType":"164","messageId":"165","endLine":4,"endColumn":15},{"ruleId":"162","severity":1,"message":"177","line":5,"column":10,"nodeType":"164","messageId":"165","endLine":5,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":16,"column":17,"nodeType":"180","messageId":"181","endLine":16,"endColumn":19},{"ruleId":"162","severity":1,"message":"175","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"169","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":21},{"ruleId":"162","severity":1,"message":"182","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"168","line":3,"column":16,"nodeType":"164","messageId":"165","endLine":3,"endColumn":24},{"ruleId":"162","severity":1,"message":"183","line":5,"column":33,"nodeType":"164","messageId":"165","endLine":5,"endColumn":44},{"ruleId":"162","severity":1,"message":"184","line":5,"column":46,"nodeType":"164","messageId":"165","endLine":5,"endColumn":59},{"ruleId":"162","severity":1,"message":"185","line":7,"column":10,"nodeType":"164","messageId":"165","endLine":7,"endColumn":29},{"ruleId":"162","severity":1,"message":"186","line":8,"column":3,"nodeType":"164","messageId":"165","endLine":8,"endColumn":28},{"ruleId":"162","severity":1,"message":"187","line":8,"column":30,"nodeType":"164","messageId":"165","endLine":8,"endColumn":56},{"ruleId":"162","severity":1,"message":"188","line":9,"column":1,"nodeType":"164","messageId":"165","endLine":9,"endColumn":17},{"ruleId":"162","severity":1,"message":"189","line":10,"column":1,"nodeType":"164","messageId":"165","endLine":10,"endColumn":24},{"ruleId":"162","severity":1,"message":"190","line":10,"column":26,"nodeType":"164","messageId":"165","endLine":10,"endColumn":41},{"ruleId":"162","severity":1,"message":"191","line":10,"column":43,"nodeType":"164","messageId":"165","endLine":10,"endColumn":61},{"ruleId":"162","severity":1,"message":"192","line":11,"column":25,"nodeType":"164","messageId":"165","endLine":11,"endColumn":42},{"ruleId":"162","severity":1,"message":"193","line":13,"column":16,"nodeType":"164","messageId":"165","endLine":13,"endColumn":33},{"ruleId":"162","severity":1,"message":"194","line":16,"column":10,"nodeType":"164","messageId":"165","endLine":16,"endColumn":16},{"ruleId":"162","severity":1,"message":"195","line":79,"column":9,"nodeType":"164","messageId":"165","endLine":79,"endColumn":26},{"ruleId":"162","severity":1,"message":"196","line":80,"column":19,"nodeType":"164","messageId":"165","endLine":80,"endColumn":35},{"ruleId":"162","severity":1,"message":"197","line":80,"column":80,"nodeType":"164","messageId":"165","endLine":80,"endColumn":90},{"ruleId":"198","severity":1,"message":"199","line":112,"column":6,"nodeType":"200","endLine":112,"endColumn":8,"suggestions":"201"},{"ruleId":"178","severity":1,"message":"202","line":118,"column":50,"nodeType":"180","messageId":"181","endLine":118,"endColumn":52},{"ruleId":"162","severity":1,"message":"163","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"203","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":16},{"ruleId":"162","severity":1,"message":"204","line":7,"column":8,"nodeType":"164","messageId":"165","endLine":7,"endColumn":20},{"ruleId":"162","severity":1,"message":"183","line":7,"column":35,"nodeType":"164","messageId":"165","endLine":7,"endColumn":46},{"ruleId":"162","severity":1,"message":"184","line":7,"column":48,"nodeType":"164","messageId":"165","endLine":7,"endColumn":61},{"ruleId":"162","severity":1,"message":"205","line":8,"column":51,"nodeType":"164","messageId":"165","endLine":8,"endColumn":62},{"ruleId":"162","severity":1,"message":"206","line":8,"column":64,"nodeType":"164","messageId":"165","endLine":8,"endColumn":78},{"ruleId":"162","severity":1,"message":"207","line":11,"column":8,"nodeType":"164","messageId":"165","endLine":11,"endColumn":16},{"ruleId":"162","severity":1,"message":"177","line":12,"column":10,"nodeType":"164","messageId":"165","endLine":12,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":71,"column":23,"nodeType":"180","messageId":"181","endLine":71,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":14},{"ruleId":"162","severity":1,"message":"208","line":11,"column":9,"nodeType":"164","messageId":"165","endLine":11,"endColumn":16},{"ruleId":"162","severity":1,"message":"175","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":26},{"ruleId":"162","severity":1,"message":"209","line":1,"column":16,"nodeType":"164","messageId":"165","endLine":1,"endColumn":25},{"ruleId":"162","severity":1,"message":"177","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":36},{"ruleId":"162","severity":1,"message":"174","line":11,"column":19,"nodeType":"164","messageId":"165","endLine":11,"endColumn":27},{"ruleId":"210","severity":1,"message":"211","line":68,"column":40,"nodeType":"212","messageId":"213","endLine":68,"endColumn":42},{"ruleId":"162","severity":1,"message":"214","line":311,"column":10,"nodeType":"164","messageId":"165","endLine":311,"endColumn":23},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ShowReportsButton' is defined but never used.","'combineReducers' is defined but never used.","'useState' is defined but never used.","'useDispatch' is defined but never used.","'PrintReports' is defined but never used.","'useSelector' is defined but never used.","'selectPage' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'createAsyncThunk' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'soilTypes' is defined but never used.","'selectCurId' is defined but never used.","'selectReports' is defined but never used.","'selectInitialVolume' is defined but never used.","'selectInfiltrometerRadius' is defined but never used.","'selectInfiltrometerSuction' is defined but never used.","'setInitialVolume' is defined but never used.","'setInfiltrometerSuction' is defined but never used.","'setTimeInterval' is defined but never used.","'selectTimeInterval' is defined but never used.","'setSecondsElapsed' is defined but never used.","'formValueSelector' is defined but never used.","'Button' is defined but never used.","'infiltrometerData' is assigned a value but never used.","'soilTypeSelected' is assigned a value but never used.","'soilValues' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadDataAtStart'. Either include it or remove the dependency array.","ArrayExpression",["217"],"Expected '!==' and instead saw '!='.","'ReactDOM' is defined but never used.","'reportsSlice' is defined but never used.","'setSoilType' is defined but never used.","'selectSoilType' is defined but never used.","'_default' is defined but never used.","'reports' is assigned a value but never used.","'Component' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'createWrapper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},"Update the dependencies array to be: [loadDataAtStart]",{"range":"220","text":"221"},[3401,3403],"[loadDataAtStart]"]