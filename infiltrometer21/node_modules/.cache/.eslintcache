[{"E:\\Infiltrometer\\infiltrometer21\\src\\index.js":"1","E:\\Infiltrometer\\infiltrometer21\\src\\App.js":"2","E:\\Infiltrometer\\infiltrometer21\\src\\app\\store.js":"3","E:\\Infiltrometer\\infiltrometer21\\src\\serviceWorker.js":"4","E:\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\redirector-slice.js":"5","E:\\Infiltrometer\\infiltrometer21\\src\\features\\pdfviewer\\Manuals.js":"6","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsSlice.js":"7","E:\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\Redirector.js":"8","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\bear-initializeSlice.js":"9","E:\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\RegressionTesting.js":"10","E:\\Infiltrometer\\infiltrometer21\\src\\features\\navBar\\NavBar.js":"11","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\bear-resultsSlice.js":"12","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\bear-replicationSlice.js":"13","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\BaerReplicationView.js":"14","E:\\Infiltrometer\\infiltrometer21\\src\\features\\pdfviewer\\pdf-viewer.js":"15","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\BaerResultsView.js":"16","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\ReportsTable.js":"17","E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterSlice.js":"18","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\BaerInitializeView.js":"19","E:\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\regression-js.js":"20","E:\\Infiltrometer\\infiltrometer21\\src\\app\\soilTypes.js":"21","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\protocols.js":"22","E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterAPI.js":"23","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\table.js":"24","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsDataPackager.js":"25","E:\\Infiltrometer\\infiltrometer21\\src\\app\\infiltrometerType.js":"26","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\severityRatings.js":"27","E:\\Infiltrometer\\infiltrometer21\\src\\features\\navBar\\baerLogo.js":"28","E:\\Infiltrometer\\infiltrometer21\\src\\features\\homepage\\HomePage.js":"29","E:\\Infiltrometer\\infiltrometer21\\src\\features\\useful-functions\\usefulFunctions.js":"30","E:\\Infiltrometer\\infiltrometer21\\src\\features\\audio\\Player.js":"31"},{"size":937,"mtime":1634940410132,"results":"32","hashOfConfig":"33"},{"size":1780,"mtime":1638306340850,"results":"34","hashOfConfig":"33"},{"size":1242,"mtime":1635943382561,"results":"35","hashOfConfig":"33"},{"size":5151,"mtime":1631899423581,"results":"36","hashOfConfig":"33"},{"size":547,"mtime":1632655250899,"results":"37","hashOfConfig":"33"},{"size":371,"mtime":1634735761147,"results":"38","hashOfConfig":"33"},{"size":2672,"mtime":1638306337727,"results":"39","hashOfConfig":"33"},{"size":1320,"mtime":1638306665434,"results":"40","hashOfConfig":"33"},{"size":2539,"mtime":1635965093826,"results":"41","hashOfConfig":"33"},{"size":1085,"mtime":1632005081692,"results":"42","hashOfConfig":"33"},{"size":3549,"mtime":1638306333790,"results":"43","hashOfConfig":"33"},{"size":583,"mtime":1635979873463,"results":"44","hashOfConfig":"33"},{"size":1182,"mtime":1632845156587,"results":"45","hashOfConfig":"33"},{"size":7038,"mtime":1638306329272,"results":"46","hashOfConfig":"33"},{"size":3463,"mtime":1638290552910,"results":"47","hashOfConfig":"33"},{"size":2709,"mtime":1638306891647,"results":"48","hashOfConfig":"33"},{"size":11643,"mtime":1638306491619,"results":"49","hashOfConfig":"33"},{"size":2819,"mtime":1631899423578,"results":"50","hashOfConfig":"33"},{"size":12636,"mtime":1638306316787,"results":"51","hashOfConfig":"33"},{"size":9271,"mtime":1632005979115,"results":"52","hashOfConfig":"33"},{"size":1118,"mtime":1633637220340,"results":"53","hashOfConfig":"33"},{"size":175,"mtime":1631965019821,"results":"54","hashOfConfig":"33"},{"size":202,"mtime":1631899423578,"results":"55","hashOfConfig":"33"},{"size":3873,"mtime":1636672911327,"results":"56","hashOfConfig":"33"},{"size":3195,"mtime":1636804790756,"results":"57","hashOfConfig":"33"},{"size":202,"mtime":1633277181040,"results":"58","hashOfConfig":"33"},{"size":222,"mtime":1635021820786,"results":"59","hashOfConfig":"33"},{"size":3422,"mtime":1636922416629,"results":"60","hashOfConfig":"33"},{"size":3122,"mtime":1638202203355,"results":"61","hashOfConfig":"33"},{"size":878,"mtime":1636805841804,"results":"62","hashOfConfig":"33"},{"size":599,"mtime":1637178083446,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"c42c6c",{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},"E:\\Infiltrometer\\infiltrometer21\\src\\index.js",[],["135","136"],"E:\\Infiltrometer\\infiltrometer21\\src\\App.js",["137","138"],"E:\\Infiltrometer\\infiltrometer21\\src\\app\\store.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\serviceWorker.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\redirector-slice.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\pdfviewer\\Manuals.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsSlice.js",["139","140"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\Redirector.js",["141","142","143","144"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\bear-initializeSlice.js",["145","146","147"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { soilTypes } from '../../../app/soilTypes';\r\n\r\n\r\n const initialState = {  \r\n        initialVolume: 95,\r\n        \r\n        coordinates: {\r\n          lat:0,\r\n          long: 0,\r\n        },\r\n\r\n        soilType: {\r\n          nh0: 2.28,\r\n          alpha: 0.124\r\n        },\r\n        \r\n        infiltrometerRadius: 2.25,\r\n        infiltrometerSuction: -1,\r\n        timeInterval: 60,\r\n        site: \"Site\",\r\n        observation: \"Observation\",\r\n\r\n};\r\n\r\n\r\n\r\n/**\r\n * We need slices to \r\n */\r\nexport const baerInitializeSlice = createSlice({\r\n  \r\n  name: 'baerInitialize',\r\n  \r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setInitialVolume: (state, action)=>{\r\n\r\n      state.initialVolume = action.payload;\r\n    \r\n    },\r\n    setInfiltrometerSuction: (state, action)=>{\r\n      state.infiltrometerSuction = action.payload;\r\n    },\r\n    setTimeInterval: (state, action)=>{\r\n      state.timeInterval = action.payload;\r\n    },\r\n    setSoilType:(state, action)=>{\r\n      state.soilType = action.payload;\r\n    },\r\n    setInfiltrometerData:(state, action)=>{\r\n      state.initialVolume = action.payload.initialVolume;\r\n      state.coordinates = action.payload.coordinates;\r\n      state.soilType = action.payload.soilType;\r\n      state.timeInterval = action.payload.timeInterval;\r\n      state.infiltrometerRadius = action.payload.infiltrometerRadius;\r\n      state.infiltrometerSuction = action.payload.infiltrometerSuction;\r\n      state.site = action.payload.site;\r\n      state.observation = action.payload.observation;\r\n    }\r\n\r\n  }\r\n});\r\n\r\n/**\r\n * A selector returning the current type of the infiltrometer\r\n * @param {*} state \r\n * @returns \r\n */\r\n\r\nexport const selectInfiltrometerRadius = (state) => state.baerInitialize.infiltrometerR;\r\n\r\nexport const selectInfiltrometerSuction = (state) => state.baerInitialize.suction;\r\n\r\nexport const selectSoilType = (state) => state.baerInitialize.soilType;\r\n\r\nexport const selectInitialVolume = (state) => state.baerInitialize.initialVolume;\r\n\r\nexport const selectInfiltrometerData = (state) => state.baerInitialize;\r\n\r\nexport const selectTimeInterval = (state) => state.baerInitialize.timeInterval;\r\n\r\n\r\n//export the actions\r\nexport const {  setInitialVolume, setInfiltrometerSuction, setTimeInterval, setSoilType,setInfiltrometerData } = baerInitializeSlice.actions;\r\n\r\n\r\n\r\nexport default baerInitializeSlice.reducer;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\RegressionTesting.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\navBar\\NavBar.js",["148","149","150","151"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\bear-resultsSlice.js",["152","153"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport {baerInitializeSlice} from \"../baer-initialize/bear-initializeSlice\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    notes: \"hi im a note\"\r\n};\r\n\r\nexport const baerResultsSlice = createSlice({\r\n    name: 'baerResults',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n\r\n      setNotes: (state, action)=>{\r\n\r\n          state.notes = action.payload;\r\n          console.log(state.notes);\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n});\r\nexport default baerResultsSlice.reducer;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\bear-replicationSlice.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\BaerReplicationView.js",["154","155","156","157","158","159","160"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\pdfviewer\\pdf-viewer.js",["161","162","163","164","165"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport default function SinglePagePDFView(props) {\r\n\r\n    let { pdf, reload } = props\r\n\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [value, setValue] = useState(1);\r\n    const [finalValue, setFinalValue] = useState(null);\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n\r\n        if (reload) {\r\n\r\n            previousPage(); nextPage(); reload = false;\r\n        }\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    }\r\n\r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    }\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <div class=\"rounded border shadow\">\r\n                    <h1 className=\"pt-2 display-4\">Manuals</h1>\r\n                    <Row className=\"p-3 text-center\">\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <Document\r\n                                class=\"text-center\"\r\n                                file={pdf}\r\n\r\n                                onLoadSuccess={onDocumentLoadSuccess}\r\n                            >\r\n                                <Page pageNumber={pageNumber} />\r\n\r\n                            </Document>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <Form.Control\r\n                                        type=\"range\"\r\n                                        disabled\r\n                                        min=\"1\"\r\n                                        max={numPages}\r\n                                        value={pageNumber}\r\n                                        className=\"w-100\"\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Label>Page {pageNumber} of {numPages}</Form.Label>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col></Col>\r\n                    </Row>\r\n                    <Row className=\"pb-3 text-center\">\r\n                        <Col>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                className=\"w-50\"\r\n                                disabled={pageNumber <= 1}\r\n                                onClick={previousPage}\r\n                            >\r\n                                Previous\r\n                            </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button\r\n                                variant=\"dark\"\r\n                                className=\"w-50\"\r\n                                disabled={pageNumber >= numPages}\r\n                                onClick={nextPage}\r\n                            >\r\n                                Next\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\BaerResultsView.js",["166","167","168"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\ReportsTable.js",["169","170","171","172","173","174","175"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterSlice.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\BaerInitializeView.js",["176","177","178","179","180","181","182","183","184","185","186","187"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\regression-js.js",["188"],"const DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\r\n\r\n/**\r\n* Determine the coefficient of determination (r^2) of a fit from the observations\r\n* and predictions.\r\n*\r\n* @param {Array<Array<number>>} data - Pairs of observed x-y values\r\n* @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\r\n*\r\n* @return {number} - The r^2 value, or NaN if one cannot be calculated.\r\n*/\r\nfunction determinationCoefficient(data, results) {\r\n  const predictions = [];\r\n  const observations = [];\r\n\r\n  data.forEach((d, i) => {\r\n    if (d[1] !== null) {\r\n      observations.push(d);\r\n      predictions.push(results[i]);\r\n    }\r\n  });\r\n\r\n  const sum = observations.reduce((a, observation) => a + observation[1], 0);\r\n  const mean = sum / observations.length;\r\n\r\n  const ssyy = observations.reduce((a, observation) => {\r\n    const difference = observation[1] - mean;\r\n    return a + (difference * difference);\r\n  }, 0);\r\n\r\n  const sse = observations.reduce((accum, observation, index) => {\r\n    const prediction = predictions[index];\r\n    const residual = observation[1] - prediction[1];\r\n    return accum + (residual * residual);\r\n  }, 0);\r\n\r\n  return 1 - (sse / ssyy);\r\n}\r\n\r\n/**\r\n* Determine the solution of a system of linear equations A * x = b using\r\n* Gaussian elimination.\r\n*\r\n* @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\r\n* @param {number} order - How many degrees to solve for\r\n*\r\n* @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\r\n*/\r\nfunction gaussianElimination(input, order) {\r\n  const matrix = input;\r\n  const n = input.length - 1;\r\n  const coefficients = [order];\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    let maxrow = i;\r\n    for (let j = i + 1; j < n; j++) {\r\n      if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\r\n        maxrow = j;\r\n      }\r\n    }\r\n\r\n    for (let k = i; k < n + 1; k++) {\r\n      const tmp = matrix[k][i];\r\n      matrix[k][i] = matrix[k][maxrow];\r\n      matrix[k][maxrow] = tmp;\r\n    }\r\n\r\n    for (let j = i + 1; j < n; j++) {\r\n      for (let k = n; k >= i; k--) {\r\n        matrix[k][j] -= (matrix[k][i] * matrix[i][j]) / matrix[i][i];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let j = n - 1; j >= 0; j--) {\r\n    let total = 0;\r\n    for (let k = j + 1; k < n; k++) {\r\n      total += matrix[k][j] * coefficients[k];\r\n    }\r\n\r\n    coefficients[j] = (matrix[n][j] - total) / matrix[j][j];\r\n  }\r\n\r\n  return coefficients;\r\n}\r\n\r\n/**\r\n* Round a number to a precision, specificed in number of decimal places\r\n*\r\n* @param {number} number - The number to round\r\n* @param {number} precision - The number of decimal places to round to:\r\n*                             > 0 means decimals, < 0 means powers of 10\r\n*\r\n*\r\n* @return {numbr} - The number, rounded\r\n*/\r\nfunction round(number, precision) {\r\n  const factor = 10 ** precision;\r\n  return Math.round(number * factor) / factor;\r\n}\r\n\r\n/**\r\n* The set of all fitting methods\r\n*\r\n* @namespace\r\n*/\r\nexport const methods = {\r\n  linear(data, options) {\r\n    const sum = [0, 0, 0, 0, 0];\r\n    let len = 0;\r\n\r\n    for (let n = 0; n < data.length; n++) {\r\n      if (data[n][1] !== null) {\r\n        len++;\r\n        sum[0] += data[n][0];\r\n        sum[1] += data[n][1];\r\n        sum[2] += data[n][0] * data[n][0];\r\n        sum[3] += data[n][0] * data[n][1];\r\n        sum[4] += data[n][1] * data[n][1];\r\n      }\r\n    }\r\n\r\n    const run = ((len * sum[2]) - (sum[0] * sum[0]));\r\n    const rise = ((len * sum[3]) - (sum[0] * sum[1]));\r\n    const gradient = run === 0 ? 0 : round(rise / run, options.precision);\r\n    const intercept = round((sum[1] / len) - ((gradient * sum[0]) / len), options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round((gradient * x) + intercept, options.precision)]\r\n    );\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [gradient, intercept],\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n      string: intercept === 0 ? `y = ${gradient}x` : `y = ${gradient}x + ${intercept}`,\r\n    };\r\n  },\r\n\r\n  exponential(data, options) {\r\n    const sum = [0, 0, 0, 0, 0, 0];\r\n\r\n    for (let n = 0; n < data.length; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += data[n][0];\r\n        sum[1] += data[n][1];\r\n        sum[2] += data[n][0] * data[n][0] * data[n][1];\r\n        sum[3] += data[n][1] * Math.log(data[n][1]);\r\n        sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\r\n        sum[5] += data[n][0] * data[n][1];\r\n      }\r\n    }\r\n\r\n    const denominator = ((sum[1] * sum[2]) - (sum[5] * sum[5]));\r\n    const a = Math.exp(((sum[2] * sum[3]) - (sum[5] * sum[4])) / denominator);\r\n    const b = ((sum[1] * sum[4]) - (sum[5] * sum[3])) / denominator;\r\n    const coeffA = round(a, options.precision);\r\n    const coeffB = round(b, options.precision);\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(coeffA * Math.exp(coeffB * x), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA}e^(${coeffB}x)`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  logarithmic(data, options) {\r\n    const sum = [0, 0, 0, 0];\r\n    const len = data.length;\r\n\r\n    for (let n = 0; n < len; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += Math.log(data[n][0]);\r\n        sum[1] += data[n][1] * Math.log(data[n][0]);\r\n        sum[2] += data[n][1];\r\n        sum[3] += (Math.log(data[n][0]) ** 2);\r\n      }\r\n    }\r\n\r\n    const a = ((len * sum[1]) - (sum[2] * sum[0])) / ((len * sum[3]) - (sum[0] * sum[0]));\r\n    const coeffB = round(a, options.precision);\r\n    const coeffA = round((sum[2] - (coeffB * sum[0])) / len, options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(round(coeffA + (coeffB * Math.log(x)), options.precision), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA} + ${coeffB} ln(x)`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  power(data, options) {\r\n    const sum = [0, 0, 0, 0, 0];\r\n    const len = data.length;\r\n\r\n    for (let n = 0; n < len; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += Math.log(data[n][0]);\r\n        sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\r\n        sum[2] += Math.log(data[n][1]);\r\n        sum[3] += (Math.log(data[n][0]) ** 2);\r\n      }\r\n    }\r\n\r\n    const b = ((len * sum[1]) - (sum[0] * sum[2])) / ((len * sum[3]) - (sum[0] ** 2));\r\n    const a = ((sum[2] - (b * sum[0])) / len);\r\n    const coeffA = round(Math.exp(a), options.precision);\r\n    const coeffB = round(b, options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(round(coeffA * (x ** coeffB), options.precision), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA}x^${coeffB}`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  polynomial(data, options) {\r\n    const lhs = [];\r\n    const rhs = [];\r\n    let a = 0;\r\n    let b = 0;\r\n\r\n    const len = data.length;\r\n    const k = options.order + 1;\r\n\r\n    for (let i = 1; i < k; i++) {\r\n      for (let l = 0; l < len; l++) {\r\n        if (data[l][1] !== null) {\r\n          a += (data[l][0] ** i) * data[l][1];\r\n        }\r\n      }\r\n\r\n      lhs.push(a);\r\n      a = 0;\r\n\r\n      const c = [];\r\n      for (let j = 1; j < k; j++) {\r\n        for (let l = 0; l < len; l++) {\r\n          if (data[l][1] !== null) {\r\n            b += data[l][0] ** (i + j);\r\n          }\r\n        }\r\n        c.push(b);\r\n        b = 0;\r\n      }\r\n      rhs.push(c);\r\n    }\r\n    rhs.push(lhs);\r\n\r\n    const coefficients = [0,...gaussianElimination(rhs, k).map(v => round(v, options.precision))];\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(\r\n        coefficients.reduce((sum, coeff, power) => sum + (coeff * (x ** power)), 0),\r\n        options.precision,\r\n      ),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    let string = 'y = ';\r\n    for (let i = coefficients.length - 1; i >= 0; i--) {\r\n      if (i > 1) {\r\n        string += `${coefficients[i]}x^${i} + `;\r\n      } else if (i === 1) {\r\n        string += `${coefficients[i]}x + `;\r\n      } else {\r\n        string += coefficients[i];\r\n      }\r\n    }\r\n\r\n    return {\r\n      string,\r\n      points,\r\n      predict,\r\n      equation: [...coefficients].reverse(),\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n};\r\n\r\nfunction createWrapper() {\r\n  const reduce = (accumulator, name) => ({\r\n    _round: round,\r\n    ...accumulator,\r\n    [name](data, supplied) {\r\n      return methods[name](data, {\r\n        ...DEFAULT_OPTIONS,\r\n        ...supplied,\r\n      });\r\n    },\r\n  });\r\n\r\n  return Object.keys(methods).reduce(reduce, {});\r\n}\r\n","E:\\Infiltrometer\\infiltrometer21\\src\\app\\soilTypes.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\protocols.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterAPI.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\table.js",["189","190","191","192","193","194"],"import React, {Component, useEffect, useState} from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {selectCurId, selectReports} from \"../../reports/reportsSlice\";\r\nimport {SeverityRatings} from \"../../reports/severityRatings\";\r\nimport { findAverageRate, findSeverityRating, findRate } from '../../reports/reportsDataPackager';\r\n\r\nconst Table = () => {\r\n    const rawReports = useSelector(selectReports);\r\n\r\n    const curReport = rawReports[useSelector(selectCurId)];\r\n\r\n\r\n    const [state, setState] = useState(filterReadings());\r\n\r\n\r\n\r\n    /**\r\n     * Create an array to use for a table row from reading data\r\n     */\r\n    function filterReadings(){\r\n        \r\n\r\n        if (curReport == undefined) return{reports: []};\r\n\r\n        let readingsArr = [];\r\n        for(let i = 0; i < curReport.readings.length; i++){\r\n            readingsArr[i] = {\r\n\r\n                id: i,\r\n                Time: curReport.readings[i].secondsElapsed,\r\n                Volume: curReport.readings[i].volume,\r\n                Rate: findRate(i, curReport)\r\n\r\n            };\r\n        }\r\n        return {reports: readingsArr};\r\n    }\r\n\r\n    /**\r\n     * map state to table elements\r\n     */\r\n    function renderTableData() {\r\n        return filterReadings().reports.map((report, index) => {\r\n            const {id, Time, Volume,Rate} = report //destructuring\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{id}</td>\r\n                    <td>{Time}</td>\r\n                    <td>{Volume}</td>\r\n                    <td>{Rate.toPrecision(4)}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    /**\r\n     * create header for table\r\n     */\r\n    function renderTableHeader() {\r\n        try{\r\n            let header = Object.keys(state.reports[0])\r\n        return header.map((key, index) => {\r\n            console.log(key.toUpperCase())\r\n            if (key.toUpperCase() === \"ID\") {\r\n                return <th key={index}>{key.toUpperCase()}</th>\r\n            }\r\n            if (key.toUpperCase() === \"TIME\") {\r\n                return <th key={index}>{key.toUpperCase() + \" (s)\"}</th>\r\n            }\r\n\r\n\r\n            if (key.toUpperCase() === \"VOLUME\") {\r\n                return <th key={index}>{key.toUpperCase() + \" (mL)\"}</th>\r\n            }\r\n            if (key.toUpperCase() === \"RATE\") {\r\n                return <th key={index}>{key.toUpperCase() + \" (mL/min)\"}</th>\r\n            }\r\n        })\r\n        }\r\n        catch (e){\r\n            return <th key = {0}>No Readings To Display</th>;\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n     //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\r\n        return (\r\n            <div className=\"mx-5\">\r\n                <table class=\"table table-light table-striped table-hover\" id='students'>\r\n                    <tbody>\r\n                    <tr class=\"table-dark\">{renderTableHeader()}</tr>\r\n                    {renderTableData()}\r\n                    </tbody>\r\n                </table>\r\n                <table class=\"table table-light table-striped table-hover\">\r\n                    <tbody>\r\n                        <tr class=\"table-dark\">\r\n                            <th class=\"text-center\">AVERAGE (mL/min)</th>\r\n                            <th className=\"text-center\">SEVERITY RATING</th>\r\n                        </tr>\r\n                        <tr class=\"table-striped\">\r\n                            <td className=\"text-center\">{findAverageRate(curReport).toPrecision(4)}</td>\r\n                            <td class=\"text-center\">{findSeverityRating(findAverageRate(curReport)).name}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\nexport default Table //exporting a component make it reusable and this is the beauty of react","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsDataPackager.js",["195"],"import { SeverityRatings } from \"./severityRatings\";\r\n\r\n\r\n/**\r\n * create a csv of the current report\r\n * @param {The current report} i\r\n */\r\nexport function makeCSV(curReport) {\r\n\r\n\r\n    let obj = {};\r\n    obj[curReport.id] = curReport;\r\n    return makeCSVFromGroupOfReports(obj);\r\n\r\n}\r\n\r\n\r\nfunction handleTextForCSV(text) {\r\n    if (text == undefined) return (\"\");\r\n    return text.toString().replaceAll('\"', '\"\"');\r\n\r\n}\r\n/**\r\n * \r\n * @param {Object of key-report pairs} reportGroup \r\n * @returns \r\n */\r\nexport function makeCSVFromGroupOfReports(reportGroup) {\r\n    let data = [['Date', 'Protocol', 'Soil Alpha', 'Soil NH/O', 'Average Rate (mL/min)', 'Severity Rating', 'Site Name', 'Observation Name',\r\n        'Notes', 'Replication Number', 'Time (sec)', 'Volume(mL)', 'Rate(mL / min)', 'Latitude', 'Longitude']];\r\n    Object.keys(reportGroup).forEach(reportID => {\r\n        let curReport = reportGroup[reportID];\r\n        let curReportData = [curReport.date, curReport.protocol, curReport.infiltrometerData.soilType.alpha, curReport.infiltrometerData.soilType.nh0,\r\n        findAverageRate(curReport), findSeverityRating(findAverageRate(curReport)).name, handleTextForCSV(curReport.infiltrometerData.site),\r\n        handleTextForCSV(curReport.infiltrometerData.observation), handleTextForCSV(curReport.notes)];\r\n\r\n        let i = 0;\r\n        //readings data\r\n        curReport.readings.forEach(reading => {\r\n            //reading data\r\n            let row = [...curReportData];\r\n\r\n            row.push((i + 1).toString(), reading.secondsElapsed,\r\n                reading.volume,\r\n                findRate(i, curReport), reading.lat, reading.lon);\r\n\r\n            data.push(row);\r\n            i++;\r\n        });\r\n    });\r\n    return { data, filename: \"reports.csv\" }\r\n}\r\n\r\n/**\r\n * Find ml/min for a reading\r\n * @param {The current reading index} i\r\n */\r\nexport function findRate(readingIndex, report) {\r\n    if (readingIndex > 0) {\r\n\r\n        let deltaV = report.readings[readingIndex - 1].volume - report.readings[readingIndex].volume;\r\n        let deltaT = report.readings[readingIndex].secondsElapsed - report.readings[readingIndex - 1].secondsElapsed;\r\n        return (deltaV) / (deltaT / 60);\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\n/**\r\n * Find average rate (ml/min)\r\n * Relies on findRate(i) to get rates for calculating the average\r\n * @param {The current reading index} i\r\n */\r\nexport function findAverageRate(report) {\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i < report.readings.length; i++) {\r\n        sum += findRate(i, report);\r\n    }\r\n\r\n    return sum / (report.readings.length - 1);\r\n}\r\n\r\n/**\r\n * Returns severity rating based on average rate\r\n * See severityRatings.js for severity rating values\r\n * @param {Average flow rate} avgRate\r\n */\r\nexport function findSeverityRating(avgRate) {\r\n    if (avgRate >= SeverityRatings.None.min)\r\n        return SeverityRatings.None;\r\n    if (avgRate >= SeverityRatings.Strong.min && avgRate < SeverityRatings.Strong.max)\r\n        return SeverityRatings.Strong;\r\n    if (avgRate >= SeverityRatings.Weak.min && avgRate < SeverityRatings.Weak.max)\r\n        return SeverityRatings.Weak;\r\n    else return SeverityRatings.None;\r\n}\r\n\r\n","E:\\Infiltrometer\\infiltrometer21\\src\\app\\infiltrometerType.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\severityRatings.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\navBar\\baerLogo.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\homepage\\HomePage.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\useful-functions\\usefulFunctions.js",["196"],"import { useDispatch } from \"react-redux\";\r\n/**\r\n * \r\n * @param {Returns the reading with geo data, if possible\r\n * If geo data cannot be collected, fills with \"N/A\"} reading \r\n * @param {Function to call after finishing adding the data, takes the new reading\r\n * as a param} onFinished \r\n */\r\nexport function addGeoDataToReading(reading, onFinished) {\r\n    const dispatch = useDispatch;\r\n\r\n    //try to get the geolocation data\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n        //add the intial reading\r\n        onFinished({\r\n            ...reading,\r\n            lat: pos.coords.latitude,\r\n            lon: pos.coords.longitude,\r\n        });\r\n\r\n    },\r\n        (err) => {\r\n            //add the intial reading\r\n            onFinished({\r\n                ...reading,\r\n                lat: \"N/A\",\r\n                lon: \"N/A\"\r\n            });\r\n        }\r\n    )\r\n\r\n}","E:\\Infiltrometer\\infiltrometer21\\src\\features\\audio\\Player.js",["197","198","199"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport const useAudio = url => {\r\n    const [audio] = useState(new Audio(url));\r\n    const [playing, setPlaying] = useState(false);\r\n\r\n    const toggle = () => setPlaying(!playing);\r\n\r\n    useEffect(() => {\r\n        playing ? audio.play() : audio.pause();\r\n    },\r\n        [playing]\r\n    );\r\n\r\n    useEffect(() => {\r\n        audio.addEventListener('ended', () => setPlaying(false));\r\n        return () => {\r\n            audio.removeEventListener('ended', () => setPlaying(false));\r\n        };\r\n    }, []);\r\n\r\n    return [playing, toggle];\r\n};\r\n",{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":3,"column":37,"nodeType":"206","messageId":"207","endLine":3,"endColumn":41},{"ruleId":"204","severity":1,"message":"208","line":7,"column":10,"nodeType":"206","messageId":"207","endLine":7,"endColumn":27},{"ruleId":"204","severity":1,"message":"209","line":1,"column":10,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"211","line":61,"column":23,"nodeType":"212","messageId":"213","endLine":61,"endColumn":25},{"ruleId":"204","severity":1,"message":"214","line":4,"column":10,"nodeType":"206","messageId":"207","endLine":4,"endColumn":15},{"ruleId":"204","severity":1,"message":"215","line":5,"column":10,"nodeType":"206","messageId":"207","endLine":5,"endColumn":19},{"ruleId":"204","severity":1,"message":"216","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":20},{"ruleId":"204","severity":1,"message":"217","line":6,"column":24,"nodeType":"206","messageId":"207","endLine":6,"endColumn":35},{"ruleId":"204","severity":1,"message":"209","line":1,"column":10,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"218","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":21},{"ruleId":"204","severity":1,"message":"219","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":19},{"ruleId":"204","severity":1,"message":"220","line":2,"column":23,"nodeType":"206","messageId":"207","endLine":2,"endColumn":34},{"ruleId":"204","severity":1,"message":"221","line":3,"column":10,"nodeType":"206","messageId":"207","endLine":3,"endColumn":20},{"ruleId":"204","severity":1,"message":"222","line":15,"column":12,"nodeType":"206","messageId":"207","endLine":15,"endColumn":17},{"ruleId":"204","severity":1,"message":"223","line":15,"column":19,"nodeType":"206","messageId":"207","endLine":15,"endColumn":27},{"ruleId":"204","severity":1,"message":"209","line":1,"column":10,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"224","line":2,"column":9,"nodeType":"206","messageId":"207","endLine":2,"endColumn":28},{"ruleId":"204","severity":1,"message":"225","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":16},{"ruleId":"204","severity":1,"message":"216","line":6,"column":8,"nodeType":"206","messageId":"207","endLine":6,"endColumn":20},{"ruleId":"204","severity":1,"message":"217","line":6,"column":36,"nodeType":"206","messageId":"207","endLine":6,"endColumn":47},{"ruleId":"204","severity":1,"message":"226","line":6,"column":49,"nodeType":"206","messageId":"207","endLine":6,"endColumn":62},{"ruleId":"204","severity":1,"message":"227","line":7,"column":51,"nodeType":"206","messageId":"207","endLine":7,"endColumn":62},{"ruleId":"204","severity":1,"message":"228","line":7,"column":64,"nodeType":"206","messageId":"207","endLine":7,"endColumn":78},{"ruleId":"204","severity":1,"message":"229","line":10,"column":8,"nodeType":"206","messageId":"207","endLine":10,"endColumn":16},{"ruleId":"204","severity":1,"message":"215","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"230","line":13,"column":12,"nodeType":"206","messageId":"207","endLine":13,"endColumn":17},{"ruleId":"204","severity":1,"message":"231","line":13,"column":19,"nodeType":"206","messageId":"207","endLine":13,"endColumn":27},{"ruleId":"204","severity":1,"message":"232","line":14,"column":12,"nodeType":"206","messageId":"207","endLine":14,"endColumn":22},{"ruleId":"204","severity":1,"message":"233","line":14,"column":24,"nodeType":"206","messageId":"207","endLine":14,"endColumn":37},{"ruleId":"204","severity":1,"message":"205","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":26,"column":36,"nodeType":"236","endLine":26,"endColumn":38,"suggestions":"237"},{"ruleId":"238","severity":2,"message":"239","line":39,"column":14,"nodeType":"240","messageId":"241","endLine":39,"endColumn":18},{"ruleId":"204","severity":1,"message":"242","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":17},{"ruleId":"204","severity":1,"message":"243","line":17,"column":11,"nodeType":"206","messageId":"207","endLine":17,"endColumn":20},{"ruleId":"210","severity":1,"message":"244","line":36,"column":85,"nodeType":"212","messageId":"213","endLine":36,"endColumn":87},{"ruleId":"210","severity":1,"message":"244","line":38,"column":84,"nodeType":"212","messageId":"213","endLine":38,"endColumn":86},{"ruleId":"210","severity":1,"message":"244","line":100,"column":40,"nodeType":"212","messageId":"213","endLine":100,"endColumn":42},{"ruleId":"245","severity":1,"message":"246","line":186,"column":40,"nodeType":"247","messageId":"248","endLine":186,"endColumn":42},{"ruleId":"210","severity":1,"message":"211","line":194,"column":35,"nodeType":"212","messageId":"213","endLine":194,"endColumn":37},{"ruleId":"204","severity":1,"message":"217","line":4,"column":33,"nodeType":"206","messageId":"207","endLine":4,"endColumn":44},{"ruleId":"204","severity":1,"message":"226","line":4,"column":46,"nodeType":"206","messageId":"207","endLine":4,"endColumn":59},{"ruleId":"204","severity":1,"message":"249","line":7,"column":3,"nodeType":"206","messageId":"207","endLine":7,"endColumn":22},{"ruleId":"204","severity":1,"message":"250","line":8,"column":3,"nodeType":"206","messageId":"207","endLine":8,"endColumn":28},{"ruleId":"204","severity":1,"message":"251","line":8,"column":30,"nodeType":"206","messageId":"207","endLine":8,"endColumn":56},{"ruleId":"204","severity":1,"message":"252","line":9,"column":21,"nodeType":"206","messageId":"207","endLine":9,"endColumn":44},{"ruleId":"204","severity":1,"message":"253","line":9,"column":46,"nodeType":"206","messageId":"207","endLine":9,"endColumn":61},{"ruleId":"204","severity":1,"message":"254","line":10,"column":3,"nodeType":"206","messageId":"207","endLine":10,"endColumn":21},{"ruleId":"204","severity":1,"message":"227","line":10,"column":23,"nodeType":"206","messageId":"207","endLine":10,"endColumn":34},{"ruleId":"204","severity":1,"message":"228","line":10,"column":36,"nodeType":"206","messageId":"207","endLine":10,"endColumn":50},{"ruleId":"204","severity":1,"message":"255","line":12,"column":25,"nodeType":"206","messageId":"207","endLine":12,"endColumn":42},{"ruleId":"204","severity":1,"message":"256","line":17,"column":31,"nodeType":"206","messageId":"207","endLine":17,"endColumn":52},{"ruleId":"204","severity":1,"message":"257","line":311,"column":10,"nodeType":"206","messageId":"207","endLine":311,"endColumn":23},{"ruleId":"204","severity":1,"message":"258","line":1,"column":16,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"215","line":1,"column":27,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"259","line":4,"column":9,"nodeType":"206","messageId":"207","endLine":4,"endColumn":24},{"ruleId":"204","severity":1,"message":"223","line":13,"column":19,"nodeType":"206","messageId":"207","endLine":13,"endColumn":27},{"ruleId":"210","severity":1,"message":"211","line":23,"column":23,"nodeType":"212","messageId":"213","endLine":23,"endColumn":25},{"ruleId":"245","severity":1,"message":"246","line":62,"column":40,"nodeType":"247","messageId":"248","endLine":62,"endColumn":42},{"ruleId":"210","severity":1,"message":"211","line":19,"column":14,"nodeType":"212","messageId":"213","endLine":19,"endColumn":16},{"ruleId":"204","severity":1,"message":"260","line":10,"column":11,"nodeType":"206","messageId":"207","endLine":10,"endColumn":19},{"ruleId":"204","severity":1,"message":"261","line":1,"column":8,"nodeType":"206","messageId":"207","endLine":1,"endColumn":13},{"ruleId":"234","severity":1,"message":"262","line":12,"column":9,"nodeType":"236","endLine":12,"endColumn":18,"suggestions":"263"},{"ruleId":"234","severity":1,"message":"262","line":20,"column":8,"nodeType":"236","endLine":20,"endColumn":10,"suggestions":"264"},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'RegressionTesting' is defined but never used.","'createAsyncThunk' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Route' is defined but never used.","'useEffect' is defined but never used.","'reportsSlice' is defined but never used.","'selectCurId' is defined but never used.","'useDispatch' is defined but never used.","'soilTypes' is defined but never used.","'useSelector' is defined but never used.","'selectPage' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'baerInitializeSlice' is defined but never used.","'ReactDOM' is defined but never used.","'selectReports' is defined but never used.","'setSoilType' is defined but never used.","'selectSoilType' is defined but never used.","'_default' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'finalValue' is assigned a value but never used.","'setFinalValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notes'. Either include it or remove the dependency array.","ArrayExpression",["267"],"react/jsx-no-undef","'Form' is not defined.","JSXIdentifier","undefined","'makeCSV' is defined but never used.","'curReport' is assigned a value but never used.","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'selectInitialVolume' is defined but never used.","'selectInfiltrometerRadius' is defined but never used.","'selectInfiltrometerSuction' is defined but never used.","'setInfiltrometerSuction' is defined but never used.","'setTimeInterval' is defined but never used.","'selectTimeInterval' is defined but never used.","'setSecondsElapsed' is defined but never used.","'addReadingWithGeoData' is defined but never used.","'createWrapper' is defined but never used.","'Component' is defined but never used.","'SeverityRatings' is defined but never used.","'dispatch' is assigned a value but never used.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'audio'. Either include it or remove the dependency array.",["268"],["269"],"no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},"Update the dependencies array to be: [notes]",{"range":"276","text":"277"},"Update the dependencies array to be: [audio, playing]",{"range":"278","text":"279"},"Update the dependencies array to be: [audio]",{"range":"280","text":"281"},[1069,1071],"[notes]",[328,337],"[audio, playing]",[556,558],"[audio]"]