[{"E:\\Infiltrometer\\infiltrometer21\\src\\index.js":"1","E:\\Infiltrometer\\infiltrometer21\\src\\App.js":"2","E:\\Infiltrometer\\infiltrometer21\\src\\app\\store.js":"3","E:\\Infiltrometer\\infiltrometer21\\src\\serviceWorker.js":"4","E:\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\RegressionTesting.js":"5","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsSlice.js":"6","E:\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\Redirector.js":"7","E:\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\redirector-slice.js":"8","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\BaerReplicationView.js":"9","E:\\Infiltrometer\\infiltrometer21\\src\\features\\navBar\\NavBar.js":"10","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\bear-replicationSlice.js":"11","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\bear-initializeSlice.js":"12","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\BaerInitializeView.js":"13","E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterSlice.js":"14","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\bear-resultsSlice.js":"15","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\BaerResultsView.js":"16","E:\\Infiltrometer\\infiltrometer21\\src\\features\\pdfviewer\\pdf-viewer.js":"17","E:\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\regression-js.js":"18","E:\\Infiltrometer\\infiltrometer21\\src\\app\\soilTypes.js":"19","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\protocols.js":"20","E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterAPI.js":"21","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\table.js":"22","E:\\Infiltrometer\\infiltrometer21\\src\\app\\infiltrometerType.js":"23","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\severityRatings.js":"24","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\ReportsTable.js":"25","E:\\Infiltrometer\\infiltrometer21\\src\\features\\pdfviewer\\Manuals.js":"26","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsDataPackager.js":"27"},{"size":937,"mtime":1634940410132,"results":"28","hashOfConfig":"29"},{"size":2132,"mtime":1634735380478,"results":"30","hashOfConfig":"29"},{"size":1219,"mtime":1634940410093,"results":"31","hashOfConfig":"29"},{"size":5151,"mtime":1631899423581,"results":"32","hashOfConfig":"29"},{"size":1085,"mtime":1632005081692,"results":"33","hashOfConfig":"29"},{"size":2398,"mtime":1635020799476,"results":"34","hashOfConfig":"29"},{"size":657,"mtime":1633130618461,"results":"35","hashOfConfig":"29"},{"size":547,"mtime":1632655250899,"results":"36","hashOfConfig":"29"},{"size":7190,"mtime":1635020799472,"results":"37","hashOfConfig":"29"},{"size":2624,"mtime":1633779843643,"results":"38","hashOfConfig":"29"},{"size":1182,"mtime":1632845156587,"results":"39","hashOfConfig":"29"},{"size":2364,"mtime":1633523510379,"results":"40","hashOfConfig":"29"},{"size":10567,"mtime":1635020799470,"results":"41","hashOfConfig":"29"},{"size":2819,"mtime":1631899423578,"results":"42","hashOfConfig":"29"},{"size":393,"mtime":1632845160633,"results":"43","hashOfConfig":"29"},{"size":1859,"mtime":1634595154068,"results":"44","hashOfConfig":"29"},{"size":2535,"mtime":1634732833904,"results":"45","hashOfConfig":"29"},{"size":9271,"mtime":1632005979115,"results":"46","hashOfConfig":"29"},{"size":1118,"mtime":1633637220340,"results":"47","hashOfConfig":"29"},{"size":175,"mtime":1631965019821,"results":"48","hashOfConfig":"29"},{"size":202,"mtime":1631899423578,"results":"49","hashOfConfig":"29"},{"size":3818,"mtime":1635021158452,"results":"50","hashOfConfig":"29"},{"size":202,"mtime":1633277181040,"results":"51","hashOfConfig":"29"},{"size":178,"mtime":1633613289651,"results":"52","hashOfConfig":"29"},{"size":4392,"mtime":1634595036900,"results":"53","hashOfConfig":"29"},{"size":371,"mtime":1634735761147,"results":"54","hashOfConfig":"29"},{"size":1693,"mtime":1635021225369,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"c42c6c",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Infiltrometer\\infiltrometer21\\src\\index.js",[],["120","121"],"E:\\Infiltrometer\\infiltrometer21\\src\\App.js",["122","123"],"import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\r\nimport BaerInitializeView from './features/baer/baer-initialize/BaerInitializeView';\r\nimport BaerReplicationView from './features/baer/baer-replication/BaerReplicationView';\r\nimport BaerResultsView from './features/baer/baer-results/BaerResultsView';\r\nimport { RegressionTesting } from './features/regression/RegressionTesting';\r\nimport { Redirector } from './features/page-redirection/Redirector';\r\nimport { NavBar } from './features/navBar/NavBar';\r\nimport SinglePagePDFView from \"./features/pdfviewer/pdf-viewer\";\r\nimport ReportsTable from './features/reports/ReportsTable';\r\nimport { MiniDiskManualView, FieldGuideManualView } from './features/pdfviewer/Manuals';\r\nconst  App = ()=> {\r\n  return (\r\n    \r\n    <BrowserRouter>\r\n    <title>Infiltrometer Companion</title>\r\n          <NavBar/>\r\n          <Redirector/>\r\n          <Switch>\r\n           \r\n            <Route exact path =\"/Infiltrometer/\">\r\n              <div>\r\n                <h1>\r\n                  Home Page\r\n                </h1>\r\n              </div>\r\n            </Route>\r\n            <Route exact path =\"/Infiltrometer/baer-initialize\">\r\n              <BaerInitializeView/>\r\n            </Route>\r\n            <Route exact path =\"/Infiltrometer/baer-replication\">\r\n              <BaerReplicationView/>\r\n            </Route>\r\n            <Route exact path =\"/Infiltrometer/baer-results\">\r\n              <BaerResultsView/>\r\n            </Route>\r\n            <Route exact path =\"/Infiltrometer/testing/regression\">\r\n              <RegressionTesting/>\r\n            </Route>\r\n             <Route exact path =\"/Infiltrometer/manuals-baer\">\r\n              <FieldGuideManualView/>\r\n            \r\n            </Route>\r\n            <Route exact path =\"/Infiltrometer/manuals-infiltrometer\">\r\n              <MiniDiskManualView/>\r\n            </Route>\r\n            <Route exact path =\"/Infiltrometer/reports\">\r\n               <ReportsTable/>\r\n            </Route>\r\n\r\n          </Switch>\r\n          \r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Infiltrometer\\infiltrometer21\\src\\app\\store.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\serviceWorker.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\RegressionTesting.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsSlice.js",["124","125"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\Redirector.js",["126","127","128"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectPage, setPage } from \"./redirector-slice\";\r\nimport { useLocation, Redirect } from \"react-router\";\r\nimport { Route } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\n//Used to redirect to new pages from global state\r\n export const Redirector = () =>{\r\n\r\n    const curPage = useLocation().pathname;\r\n    const page = useSelector(selectPage);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    //reset the page\r\n    if (curPage == page) {\r\n        dispatch(setPage(null));\r\n        return null;\r\n    }\r\n    \r\n    \r\n\r\n    return page!=null ? <Redirect to ={page}/> : null;\r\n  }\r\n","E:\\Infiltrometer\\infiltrometer21\\src\\features\\page-redirection\\redirector-slice.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\BaerReplicationView.js",["129","130","131","132","133","134","135"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\navBar\\NavBar.js",["136","137","138","139"],"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectPage, setPage } from \"../page-redirection/redirector-slice\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const initialState = {\r\n        collapsed: false\r\n    }\r\n\r\n    const [state, setState] = useState(initialState);\r\n    return(\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n\r\n            <Navbar.Brand href=\"https://www.mtu.edu/computing/\" >\r\n                 <img\r\n                    src=\"https://www.mtu.edu/mtu_resources/images/download-central/logos/husky-icon/white.png\"\r\n                    width=\"56\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"MTU logo\"\r\n                    />\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"me-auto\">\r\n                    <Nav.Link onClick = {()=>dispatch(setPage(\"/Infiltrometer\"))}>\r\n                        About Us\r\n                    </Nav.Link>\r\n                    <NavDropdown title=\"New Test\" id=\"new-test-drop-down\">\r\n                        <NavDropdown.Item onClick ={()=>dispatch(setPage(\"/Infiltrometer/baer-initialize/\"))}>\r\n                            BAER protocol</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                    <Nav.Link onClick={()=>dispatch(setPage(\"/Infiltrometer/reports/\"))}>\r\n                        My Reports\r\n                    </Nav.Link>\r\n                     <NavDropdown title=\"Manuals\" id=\"manuals-drop-down\">\r\n                         <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick ={()=>dispatch(setPage(\"/Infiltrometer/manuals-baer/\"))}>\r\n                            BAER\r\n                        </NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item onClick ={()=>dispatch(setPage(\"/Infiltrometer/manuals-infiltrometer/\"))}>\r\n                            Infiltrometer</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                    </NavDropdown>\r\n                </Nav>\r\n                <Nav>\r\n                    <Nav.Link href=\"https://github.com/2021-SD-UI/Infiltrometer/\">\r\n                        GitHub\r\n                    </Nav.Link>\r\n                </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n\r\n\r\n}","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-replication\\bear-replicationSlice.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\bear-initializeSlice.js",["140","141","142"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport { soilTypes } from '../../../app/soilTypes';\r\n\r\n\r\n const initialState = {  \r\n        initialVolume: 0,\r\n        \r\n        coordinates: {\r\n          lat:0,\r\n          long: 0,\r\n        },\r\n\r\n        soilType: {\r\n          nh0: 0,\r\n          alpha: 0\r\n        },\r\n        \r\n        infiltrometerRadius: 0,\r\n        infiltrometerSuction: 0,\r\n        timeInterval: 30\r\n\r\n};\r\n\r\n\r\n\r\n/**\r\n * We need slices to \r\n */\r\nexport const baerInitializeSlice = createSlice({\r\n    name: 'baerInitialize',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setInitialVolume: (state, action)=>{\r\n\r\n      state.initialVolume = action.payload;\r\n    \r\n    },\r\n    setInfiltrometerSuction: (state, action)=>{\r\n      state.infiltrometerSuction = action.payload;\r\n    },\r\n    setTimeInterval: (state, action)=>{\r\n      state.timeInterval = action.payload;\r\n    },\r\n    setSoilType:(state, action)=>{\r\n      state.soilType = action.payload;\r\n    },\r\n    setInfiltrometerData:(state, action)=>{\r\n      state.initialVolume = action.payload.initialVolume;\r\n      state.coordinates = action.payload.coordinates;\r\n      state.soilType = action.payload.soilType;\r\n      state.timeInterval = action.payload.timeInterval;\r\n      state.infiltrometerRadius = action.payload.infiltrometerRadius;\r\n      state.infiltrometerSuction = action.payload.infiltrometerSuction;\r\n    }\r\n\r\n  }\r\n});\r\n\r\n/**\r\n * A selector returning the current type of the infiltrometer\r\n * @param {*} state \r\n * @returns \r\n */\r\n\r\nexport const selectInfiltrometerRadius = (state) => state.baerInitialize.infiltrometerR;\r\n\r\nexport const selectInfiltrometerSuction = (state) => state.baerInitialize.suction;\r\n\r\nexport const selectSoilType = (state) => state.baerInitialize.soilType;\r\n\r\nexport const selectInitialVolume = (state) => state.baerInitialize.initialVolume;\r\n\r\nexport const selectInfiltrometerData = (state) => state.baerInitialize;\r\n\r\nexport const selectTimeInterval = (state) => state.baerInitialize.timeInterval;\r\n\r\n\r\n//export the actions\r\nexport const {  setInitialVolume, setInfiltrometerSuction, setTimeInterval, setSoilType,setInfiltrometerData } = baerInitializeSlice.actions;\r\n\r\n\r\n\r\nexport default baerInitializeSlice.reducer;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-initialize\\BaerInitializeView.js",["143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterSlice.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\bear-resultsSlice.js",["162"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\nconst initialState = {\r\n    volume: 0,\r\n    secondsElapsed: 0,\r\n};\r\n\r\nexport const baerResultsSlice = createSlice({\r\n    name: 'baerResults',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n});\r\nexport default baerResultsSlice.reducer;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\BaerResultsView.js",["163","164"],"//The Page we are displaying for the baer Initialize view\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {selectReports} from \"../../reports/reportsSlice\";\r\nimport Table from \"./table\";\r\nimport { setPage } from '../../page-redirection/redirector-slice';\r\n\r\n\r\nconst  BaerResultsView = ()=> {\r\n  const reports = useSelector(selectReports);\r\n  const dispatch = useDispatch();\r\n\r\n  return (<div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2\"></div>\r\n        <div class=\"col-sm-8 text-center\">\r\n          <h1>Baer Results View</h1>\r\n\r\n        </div>\r\n        <div class=\"col-sm-2\"></div>\r\n\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-2\"></div>\r\n        <div class=\"col-sm-8\">\r\n          <div class=\"container\">\r\n              <Table></Table>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-2\"></div>\r\n      </div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class = \"col-2\"></div>\r\n          <div class=\"col text-center\">\r\n              <div class=\"btn btn-dark w-50\" onClick ={\r\n                ()=>dispatch(setPage(\"/Infiltrometer/baer-initialize\"))\r\n                }>  \r\n                New Test\r\n              </div>\r\n              <div class = \"row mt-2\"></div>\r\n           \r\n              \r\n              <div class=\"btn btn-secondary w-50\" onClick ={\r\n                ()=>dispatch(setPage(\"/Infiltrometer/reports\"))\r\n                }>  \r\n                Reports\r\n              </div>\r\n              <div class = \"row mt-4\"></div>\r\n              <div class=\"btn btn-success w-25\">  \r\n                Download\r\n              </div>\r\n          </div>\r\n          <div class = \"col-2\"></div>\r\n        </div>\r\n      </div>\r\n \r\n    </div>);\r\n}\r\nexport default BaerResultsView;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\pdfviewer\\pdf-viewer.js",["165"],"import React, { useEffect, useState } from 'react';\r\nimport {Document, Page, pdfjs} from 'react-pdf';\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nexport default function SinglePagePDFView(props) {\r\n    \r\n    let {pdf, reload} = props\r\n    \r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n    function onDocumentLoadSuccess({numPages}) {\r\n        \r\n        if (reload){\r\n           \r\n            previousPage(); nextPage(); reload = false;\r\n        }\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    }\r\n    \r\n    function changePage(offset) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n    }\r\n    function previousPage() {\r\n        changePage(-1);\r\n    }\r\n    function nextPage() {\r\n        changePage(1);\r\n    }\r\n   \r\n    return (\r\n        <div class=\"container\">\r\n            <div class = \"row mt-2\"/>\r\n            <div class = \"row text-center\">\r\n                <div class = \"col-4\"></div>\r\n                <div class = \"col-4\" >\r\n                      <Document\r\n                    file={pdf}\r\n                    options = {{workerSrc :\"/pdf.worker.js\"}}\r\n                    onLoadSuccess = {onDocumentLoadSuccess}\r\n                    >\r\n                    <Page pageNumber= {pageNumber}/>\r\n                    \r\n                    </Document>\r\n                </div>\r\n                <div class = \"col-4\" ></div>\r\n                <div class = \"row mt-2\"/>\r\n                <div class = \"row\">\r\n                    <p>\r\n                        Page {pageNumber || (numPages ? 1 :\"--\")} of {numPages || \"--\"}\r\n                    </p>\r\n                   <div class = \"col-2\"/>\r\n                    <div class = \"col\">\r\n                        <button type=\"button\" class=\"btn btn-secondary w-100\" disabled ={pageNumber<=1} onClick={previousPage}>\r\n                            Previous\r\n                        </button>\r\n                    </div>\r\n                    <div class = \"col-2\"/>\r\n                    <div class = \"col\">\r\n                        <button type=\"button\" class=\"btn btn-dark w-100\" disabled={pageNumber>=numPages} onClick ={nextPage}>\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                    <div class = \"col-2\"/>\r\n                </div>\r\n                <div class = \"row mt-\"/>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n\r\n    \r\n    );\r\n}","E:\\Infiltrometer\\infiltrometer21\\src\\features\\regression\\regression-js.js",["166"],"const DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\r\n\r\n/**\r\n* Determine the coefficient of determination (r^2) of a fit from the observations\r\n* and predictions.\r\n*\r\n* @param {Array<Array<number>>} data - Pairs of observed x-y values\r\n* @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\r\n*\r\n* @return {number} - The r^2 value, or NaN if one cannot be calculated.\r\n*/\r\nfunction determinationCoefficient(data, results) {\r\n  const predictions = [];\r\n  const observations = [];\r\n\r\n  data.forEach((d, i) => {\r\n    if (d[1] !== null) {\r\n      observations.push(d);\r\n      predictions.push(results[i]);\r\n    }\r\n  });\r\n\r\n  const sum = observations.reduce((a, observation) => a + observation[1], 0);\r\n  const mean = sum / observations.length;\r\n\r\n  const ssyy = observations.reduce((a, observation) => {\r\n    const difference = observation[1] - mean;\r\n    return a + (difference * difference);\r\n  }, 0);\r\n\r\n  const sse = observations.reduce((accum, observation, index) => {\r\n    const prediction = predictions[index];\r\n    const residual = observation[1] - prediction[1];\r\n    return accum + (residual * residual);\r\n  }, 0);\r\n\r\n  return 1 - (sse / ssyy);\r\n}\r\n\r\n/**\r\n* Determine the solution of a system of linear equations A * x = b using\r\n* Gaussian elimination.\r\n*\r\n* @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\r\n* @param {number} order - How many degrees to solve for\r\n*\r\n* @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\r\n*/\r\nfunction gaussianElimination(input, order) {\r\n  const matrix = input;\r\n  const n = input.length - 1;\r\n  const coefficients = [order];\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    let maxrow = i;\r\n    for (let j = i + 1; j < n; j++) {\r\n      if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\r\n        maxrow = j;\r\n      }\r\n    }\r\n\r\n    for (let k = i; k < n + 1; k++) {\r\n      const tmp = matrix[k][i];\r\n      matrix[k][i] = matrix[k][maxrow];\r\n      matrix[k][maxrow] = tmp;\r\n    }\r\n\r\n    for (let j = i + 1; j < n; j++) {\r\n      for (let k = n; k >= i; k--) {\r\n        matrix[k][j] -= (matrix[k][i] * matrix[i][j]) / matrix[i][i];\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let j = n - 1; j >= 0; j--) {\r\n    let total = 0;\r\n    for (let k = j + 1; k < n; k++) {\r\n      total += matrix[k][j] * coefficients[k];\r\n    }\r\n\r\n    coefficients[j] = (matrix[n][j] - total) / matrix[j][j];\r\n  }\r\n\r\n  return coefficients;\r\n}\r\n\r\n/**\r\n* Round a number to a precision, specificed in number of decimal places\r\n*\r\n* @param {number} number - The number to round\r\n* @param {number} precision - The number of decimal places to round to:\r\n*                             > 0 means decimals, < 0 means powers of 10\r\n*\r\n*\r\n* @return {numbr} - The number, rounded\r\n*/\r\nfunction round(number, precision) {\r\n  const factor = 10 ** precision;\r\n  return Math.round(number * factor) / factor;\r\n}\r\n\r\n/**\r\n* The set of all fitting methods\r\n*\r\n* @namespace\r\n*/\r\nexport const methods = {\r\n  linear(data, options) {\r\n    const sum = [0, 0, 0, 0, 0];\r\n    let len = 0;\r\n\r\n    for (let n = 0; n < data.length; n++) {\r\n      if (data[n][1] !== null) {\r\n        len++;\r\n        sum[0] += data[n][0];\r\n        sum[1] += data[n][1];\r\n        sum[2] += data[n][0] * data[n][0];\r\n        sum[3] += data[n][0] * data[n][1];\r\n        sum[4] += data[n][1] * data[n][1];\r\n      }\r\n    }\r\n\r\n    const run = ((len * sum[2]) - (sum[0] * sum[0]));\r\n    const rise = ((len * sum[3]) - (sum[0] * sum[1]));\r\n    const gradient = run === 0 ? 0 : round(rise / run, options.precision);\r\n    const intercept = round((sum[1] / len) - ((gradient * sum[0]) / len), options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round((gradient * x) + intercept, options.precision)]\r\n    );\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [gradient, intercept],\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n      string: intercept === 0 ? `y = ${gradient}x` : `y = ${gradient}x + ${intercept}`,\r\n    };\r\n  },\r\n\r\n  exponential(data, options) {\r\n    const sum = [0, 0, 0, 0, 0, 0];\r\n\r\n    for (let n = 0; n < data.length; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += data[n][0];\r\n        sum[1] += data[n][1];\r\n        sum[2] += data[n][0] * data[n][0] * data[n][1];\r\n        sum[3] += data[n][1] * Math.log(data[n][1]);\r\n        sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\r\n        sum[5] += data[n][0] * data[n][1];\r\n      }\r\n    }\r\n\r\n    const denominator = ((sum[1] * sum[2]) - (sum[5] * sum[5]));\r\n    const a = Math.exp(((sum[2] * sum[3]) - (sum[5] * sum[4])) / denominator);\r\n    const b = ((sum[1] * sum[4]) - (sum[5] * sum[3])) / denominator;\r\n    const coeffA = round(a, options.precision);\r\n    const coeffB = round(b, options.precision);\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(coeffA * Math.exp(coeffB * x), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA}e^(${coeffB}x)`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  logarithmic(data, options) {\r\n    const sum = [0, 0, 0, 0];\r\n    const len = data.length;\r\n\r\n    for (let n = 0; n < len; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += Math.log(data[n][0]);\r\n        sum[1] += data[n][1] * Math.log(data[n][0]);\r\n        sum[2] += data[n][1];\r\n        sum[3] += (Math.log(data[n][0]) ** 2);\r\n      }\r\n    }\r\n\r\n    const a = ((len * sum[1]) - (sum[2] * sum[0])) / ((len * sum[3]) - (sum[0] * sum[0]));\r\n    const coeffB = round(a, options.precision);\r\n    const coeffA = round((sum[2] - (coeffB * sum[0])) / len, options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(round(coeffA + (coeffB * Math.log(x)), options.precision), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA} + ${coeffB} ln(x)`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  power(data, options) {\r\n    const sum = [0, 0, 0, 0, 0];\r\n    const len = data.length;\r\n\r\n    for (let n = 0; n < len; n++) {\r\n      if (data[n][1] !== null) {\r\n        sum[0] += Math.log(data[n][0]);\r\n        sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\r\n        sum[2] += Math.log(data[n][1]);\r\n        sum[3] += (Math.log(data[n][0]) ** 2);\r\n      }\r\n    }\r\n\r\n    const b = ((len * sum[1]) - (sum[0] * sum[2])) / ((len * sum[3]) - (sum[0] ** 2));\r\n    const a = ((sum[2] - (b * sum[0])) / len);\r\n    const coeffA = round(Math.exp(a), options.precision);\r\n    const coeffB = round(b, options.precision);\r\n\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(round(coeffA * (x ** coeffB), options.precision), options.precision),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    return {\r\n      points,\r\n      predict,\r\n      equation: [coeffA, coeffB],\r\n      string: `y = ${coeffA}x^${coeffB}`,\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n\r\n  polynomial(data, options) {\r\n    const lhs = [];\r\n    const rhs = [];\r\n    let a = 0;\r\n    let b = 0;\r\n\r\n    const len = data.length;\r\n    const k = options.order + 1;\r\n\r\n    for (let i = 1; i < k; i++) {\r\n      for (let l = 0; l < len; l++) {\r\n        if (data[l][1] !== null) {\r\n          a += (data[l][0] ** i) * data[l][1];\r\n        }\r\n      }\r\n\r\n      lhs.push(a);\r\n      a = 0;\r\n\r\n      const c = [];\r\n      for (let j = 1; j < k; j++) {\r\n        for (let l = 0; l < len; l++) {\r\n          if (data[l][1] !== null) {\r\n            b += data[l][0] ** (i + j);\r\n          }\r\n        }\r\n        c.push(b);\r\n        b = 0;\r\n      }\r\n      rhs.push(c);\r\n    }\r\n    rhs.push(lhs);\r\n\r\n    const coefficients = [0,...gaussianElimination(rhs, k).map(v => round(v, options.precision))];\r\n    const predict = x => ([\r\n      round(x, options.precision),\r\n      round(\r\n        coefficients.reduce((sum, coeff, power) => sum + (coeff * (x ** power)), 0),\r\n        options.precision,\r\n      ),\r\n    ]);\r\n\r\n    const points = data.map(point => predict(point[0]));\r\n\r\n    let string = 'y = ';\r\n    for (let i = coefficients.length - 1; i >= 0; i--) {\r\n      if (i > 1) {\r\n        string += `${coefficients[i]}x^${i} + `;\r\n      } else if (i === 1) {\r\n        string += `${coefficients[i]}x + `;\r\n      } else {\r\n        string += coefficients[i];\r\n      }\r\n    }\r\n\r\n    return {\r\n      string,\r\n      points,\r\n      predict,\r\n      equation: [...coefficients].reverse(),\r\n      r2: round(determinationCoefficient(data, points), options.precision),\r\n    };\r\n  },\r\n};\r\n\r\nfunction createWrapper() {\r\n  const reduce = (accumulator, name) => ({\r\n    _round: round,\r\n    ...accumulator,\r\n    [name](data, supplied) {\r\n      return methods[name](data, {\r\n        ...DEFAULT_OPTIONS,\r\n        ...supplied,\r\n      });\r\n    },\r\n  });\r\n\r\n  return Object.keys(methods).reduce(reduce, {});\r\n}\r\n","E:\\Infiltrometer\\infiltrometer21\\src\\app\\soilTypes.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\protocols.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterAPI.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer\\baer-results\\table.js",["167","168","169","170","171","172"],"E:\\Infiltrometer\\infiltrometer21\\src\\app\\infiltrometerType.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\severityRatings.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\ReportsTable.js",["173","174"],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPage } from \"../page-redirection/redirector-slice\";\r\nimport { Protocols } from \"./protocols\";\r\nimport { removeReport, selectReports, setCurId } from \"./reportsSlice\";\r\n\r\nconst ReportsTable = () =>{\r\n    const reports = useSelector(selectReports);\r\n    const dispatch = useDispatch();\r\n\r\n    /**\r\n     * map state to table elements\r\n     */\r\n    function renderTableData() {\r\n        return Object.keys(reports).map(reportID => {\r\n\r\n            const report = reports[reportID]\r\n            return (\r\n                <tr key={report.id} >\r\n                    <td >{report.date}</td>\r\n                    <td>{report.protocol}</td>\r\n                    <td class>\r\n                        <div class = \"container\">\r\n                            <div class = \"row\">\r\n                                <div class = \"col\">\r\n                                    <div class=\"btn btn-dark  w-100\"\r\n                                    onClick = {()=>showReport(report)}>\r\n                                        View\r\n                                    </div>\r\n                                </div>\r\n                                <div class = \"col\">\r\n                                    <div class=\"btn btn-success w-100\"\r\n                                    onClick = {()=>{}}>\r\n                                        Download\r\n                                    </div>\r\n                                </div>\r\n                                <div class = \"col\">\r\n                                    <div class=\"btn btn-danger  w-100\"\r\n                                    onClick = {()=>dispatch(removeReport(report.id))}>\r\n                                        Delete\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    function showReport(report){\r\n        switch(report.protocol){\r\n            case Protocols.Baer:\r\n                dispatch(setCurId(report.id));\r\n                dispatch(setPage(\"/Infiltrometer/baer-results\"));\r\n\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * create header for table\r\n     */\r\n    function renderTableHeader() {\r\n        let header = ['Date','Protocol' , 'Options'];\r\n        return header.map((key, index) => {\r\n            console.log(key.toUpperCase())\r\n            if (key.toLowerCase() === \"protocol\") {\r\n                return <th key={index}>Protocol</th>\r\n            }\r\n            if (key.toLowerCase() === \"date\") {\r\n                return <th key={index}>Date</th>\r\n            }\r\n            if (key.toLowerCase() == \"options\"){\r\n                return <th key={index}></th>\r\n            }\r\n           \r\n        })\r\n    }\r\n\r\n\r\n    //see if there is any data\r\n    if (Object.keys(reports).length > 0){\r\n        //Whenever our class runs, render method will be called automatically, it may have already defined in the constructor behind the scene.\r\n        return (\r\n            <div class = \"container\">\r\n                <div class = \"row mt-2\" ></div>\r\n                <div class = \"row\">\r\n                    <div class = \"col-1\"></div>\r\n                    <div class = \"col-10\">\r\n                        <table class=\"table table-light table-striped table-hover\" id='students'>\r\n                            <tbody>\r\n                            <tr class=\"table-dark\">{renderTableHeader()}</tr>\r\n                            {renderTableData()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div class = \"col-1\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div class = \"container\">\r\n                <div class = \"row mt-2\"></div>\r\n                <div class = \"row\">\r\n                    <div class=\"display-4 text-center\">\r\n                      No Saved Reports\r\n                    </div>\r\n                    <div class=\"text-center\">\r\n                        Click \"New Test\" to create a report.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n     \r\n}\r\nexport default ReportsTable;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\pdfviewer\\Manuals.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsDataPackager.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":3,"column":40,"nodeType":"181","messageId":"182","endLine":3,"endColumn":44},{"ruleId":"179","severity":1,"message":"183","line":10,"column":8,"nodeType":"181","messageId":"182","endLine":10,"endColumn":25},{"ruleId":"179","severity":1,"message":"184","line":1,"column":10,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":59,"column":23,"nodeType":"187","messageId":"188","endLine":59,"endColumn":25},{"ruleId":"179","severity":1,"message":"189","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":15},{"ruleId":"179","severity":1,"message":"190","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":16,"column":17,"nodeType":"187","messageId":"188","endLine":16,"endColumn":19},{"ruleId":"179","severity":1,"message":"191","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":16},{"ruleId":"179","severity":1,"message":"192","line":6,"column":8,"nodeType":"181","messageId":"182","endLine":6,"endColumn":20},{"ruleId":"179","severity":1,"message":"193","line":6,"column":35,"nodeType":"181","messageId":"182","endLine":6,"endColumn":46},{"ruleId":"179","severity":1,"message":"194","line":6,"column":48,"nodeType":"181","messageId":"182","endLine":6,"endColumn":61},{"ruleId":"179","severity":1,"message":"195","line":7,"column":51,"nodeType":"181","messageId":"182","endLine":7,"endColumn":62},{"ruleId":"179","severity":1,"message":"196","line":7,"column":64,"nodeType":"181","messageId":"182","endLine":7,"endColumn":78},{"ruleId":"179","severity":1,"message":"197","line":10,"column":8,"nodeType":"181","messageId":"182","endLine":10,"endColumn":16},{"ruleId":"179","severity":1,"message":"198","line":2,"column":23,"nodeType":"181","messageId":"182","endLine":2,"endColumn":34},{"ruleId":"179","severity":1,"message":"199","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":20},{"ruleId":"179","severity":1,"message":"200","line":13,"column":12,"nodeType":"181","messageId":"182","endLine":13,"endColumn":17},{"ruleId":"179","severity":1,"message":"201","line":13,"column":19,"nodeType":"181","messageId":"182","endLine":13,"endColumn":27},{"ruleId":"179","severity":1,"message":"184","line":1,"column":10,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"202","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":21},{"ruleId":"179","severity":1,"message":"203","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":19},{"ruleId":"179","severity":1,"message":"180","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"204","line":3,"column":16,"nodeType":"181","messageId":"182","endLine":3,"endColumn":24},{"ruleId":"179","severity":1,"message":"193","line":5,"column":33,"nodeType":"181","messageId":"182","endLine":5,"endColumn":44},{"ruleId":"179","severity":1,"message":"194","line":5,"column":46,"nodeType":"181","messageId":"182","endLine":5,"endColumn":59},{"ruleId":"179","severity":1,"message":"205","line":7,"column":10,"nodeType":"181","messageId":"182","endLine":7,"endColumn":29},{"ruleId":"179","severity":1,"message":"206","line":8,"column":3,"nodeType":"181","messageId":"182","endLine":8,"endColumn":28},{"ruleId":"179","severity":1,"message":"207","line":8,"column":30,"nodeType":"181","messageId":"182","endLine":8,"endColumn":56},{"ruleId":"179","severity":1,"message":"208","line":9,"column":1,"nodeType":"181","messageId":"182","endLine":9,"endColumn":17},{"ruleId":"179","severity":1,"message":"209","line":10,"column":1,"nodeType":"181","messageId":"182","endLine":10,"endColumn":24},{"ruleId":"179","severity":1,"message":"210","line":10,"column":26,"nodeType":"181","messageId":"182","endLine":10,"endColumn":41},{"ruleId":"179","severity":1,"message":"211","line":10,"column":43,"nodeType":"181","messageId":"182","endLine":10,"endColumn":61},{"ruleId":"179","severity":1,"message":"212","line":11,"column":25,"nodeType":"181","messageId":"182","endLine":11,"endColumn":42},{"ruleId":"179","severity":1,"message":"213","line":13,"column":16,"nodeType":"181","messageId":"182","endLine":13,"endColumn":33},{"ruleId":"179","severity":1,"message":"214","line":16,"column":10,"nodeType":"181","messageId":"182","endLine":16,"endColumn":16},{"ruleId":"179","severity":1,"message":"215","line":79,"column":9,"nodeType":"181","messageId":"182","endLine":79,"endColumn":26},{"ruleId":"179","severity":1,"message":"216","line":80,"column":19,"nodeType":"181","messageId":"182","endLine":80,"endColumn":35},{"ruleId":"179","severity":1,"message":"217","line":80,"column":80,"nodeType":"181","messageId":"182","endLine":80,"endColumn":90},{"ruleId":"218","severity":1,"message":"219","line":112,"column":6,"nodeType":"220","endLine":112,"endColumn":8,"suggestions":"221"},{"ruleId":"185","severity":1,"message":"222","line":118,"column":50,"nodeType":"187","messageId":"188","endLine":118,"endColumn":52},{"ruleId":"179","severity":1,"message":"184","line":1,"column":10,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"180","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"223","line":11,"column":9,"nodeType":"181","messageId":"182","endLine":11,"endColumn":16},{"ruleId":"179","severity":1,"message":"190","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"224","line":311,"column":10,"nodeType":"181","messageId":"182","endLine":311,"endColumn":23},{"ruleId":"179","severity":1,"message":"225","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"190","line":1,"column":27,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"226","line":4,"column":9,"nodeType":"181","messageId":"182","endLine":4,"endColumn":24},{"ruleId":"179","severity":1,"message":"201","line":12,"column":19,"nodeType":"181","messageId":"182","endLine":12,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":22,"column":23,"nodeType":"187","messageId":"188","endLine":22,"endColumn":25},{"ruleId":"227","severity":1,"message":"228","line":61,"column":40,"nodeType":"229","messageId":"230","endLine":61,"endColumn":42},{"ruleId":"227","severity":1,"message":"228","line":71,"column":40,"nodeType":"229","messageId":"230","endLine":71,"endColumn":42},{"ruleId":"185","severity":1,"message":"186","line":79,"column":35,"nodeType":"187","messageId":"188","endLine":79,"endColumn":37},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SinglePagePDFView' is defined but never used.","'createAsyncThunk' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Route' is defined but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'reportsSlice' is defined but never used.","'selectCurId' is defined but never used.","'selectReports' is defined but never used.","'setSoilType' is defined but never used.","'selectSoilType' is defined but never used.","'_default' is defined but never used.","'useSelector' is defined but never used.","'selectPage' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'useDispatch' is defined but never used.","'soilTypes' is defined but never used.","'useState' is defined but never used.","'selectInitialVolume' is defined but never used.","'selectInfiltrometerRadius' is defined but never used.","'selectInfiltrometerSuction' is defined but never used.","'setInitialVolume' is defined but never used.","'setInfiltrometerSuction' is defined but never used.","'setTimeInterval' is defined but never used.","'selectTimeInterval' is defined but never used.","'setSecondsElapsed' is defined but never used.","'formValueSelector' is defined but never used.","'Button' is defined but never used.","'infiltrometerData' is assigned a value but never used.","'soilTypeSelected' is assigned a value but never used.","'soilValues' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadDataAtStart'. Either include it or remove the dependency array.","ArrayExpression",["233"],"Expected '!==' and instead saw '!='.","'reports' is assigned a value but never used.","'createWrapper' is defined but never used.","'Component' is defined but never used.","'SeverityRatings' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},"Update the dependencies array to be: [loadDataAtStart]",{"range":"236","text":"237"},[3401,3403],"[loadDataAtStart]"]