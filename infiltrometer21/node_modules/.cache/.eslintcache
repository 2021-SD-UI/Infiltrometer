[{"E:\\Infiltrometer\\infiltrometer21\\src\\index.js":"1","E:\\Infiltrometer\\infiltrometer21\\src\\App.js":"2","E:\\Infiltrometer\\infiltrometer21\\src\\serviceWorker.js":"3","E:\\Infiltrometer\\infiltrometer21\\src\\app\\store.js":"4","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-initialize\\BaerInitializeView.js":"5","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-initialize\\bear-initializeSlice.js":"6","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-replication\\BaerReplicationView.js":"7","E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\Counter.js":"8","E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterSlice.js":"9","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-results\\bear-resultsSlice.js":"10","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-results\\BaerResultsView.js":"11","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-replication\\bear-replicationSlice.js":"12","E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterAPI.js":"13","E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsSlice.js":"14"},{"size":650,"mtime":1631899423580,"results":"15","hashOfConfig":"16"},{"size":1095,"mtime":1631962504506,"results":"17","hashOfConfig":"16"},{"size":5151,"mtime":1631899423581,"results":"18","hashOfConfig":"16"},{"size":684,"mtime":1631962504517,"results":"19","hashOfConfig":"16"},{"size":370,"mtime":1631962504532,"results":"20","hashOfConfig":"16"},{"size":346,"mtime":1631962504561,"results":"21","hashOfConfig":"16"},{"size":365,"mtime":1631962504575,"results":"22","hashOfConfig":"16"},{"size":1826,"mtime":1631837654030,"results":"23","hashOfConfig":"16"},{"size":2819,"mtime":1631899423578,"results":"24","hashOfConfig":"16"},{"size":335,"mtime":1631962504591,"results":"25","hashOfConfig":"16"},{"size":361,"mtime":1631962504590,"results":"26","hashOfConfig":"16"},{"size":396,"mtime":1631962504581,"results":"27","hashOfConfig":"16"},{"size":202,"mtime":1631899423578,"results":"28","hashOfConfig":"16"},{"size":864,"mtime":1631962714179,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c42c6c",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"E:\\Infiltrometer\\infiltrometer21\\src\\index.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\App.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\serviceWorker.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\app\\store.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-initialize\\BaerInitializeView.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-initialize\\bear-initializeSlice.js",["63"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = {};\r\n\r\nexport const baerInitializeSlice = createSlice({\r\n    name: 'baerInitialize',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n  }\r\n});\r\nexport default baerInitializeSlice.reducer;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-replication\\BaerReplicationView.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\Counter.js",[],["64","65"],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterSlice.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-results\\bear-resultsSlice.js",["66"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\nconst initialState = {};\r\n\r\nexport const baerResultsSlice = createSlice({\r\n    name: 'baerResults',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {}\r\n});\r\nexport default baerResultsSlice.reducer;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-results\\BaerResultsView.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\baer-replication\\bear-replicationSlice.js",["67","68"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport {TimerStateValues} from 'react-compound-timer'\r\nconst initialState = {};\r\n\r\nexport const baerReplicationSlice = createSlice({\r\n    name: 'baerReplication',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {}\r\n});\r\nexport default baerReplicationSlice.reducer;","E:\\Infiltrometer\\infiltrometer21\\src\\features\\counter\\counterAPI.js",[],"E:\\Infiltrometer\\infiltrometer21\\src\\features\\reports\\reportsSlice.js",["69"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n\r\n\r\n//empty array of reports\r\nconst initialState = {\r\n    reports:[],\r\n    curId: 0\r\n};\r\n\r\nexport const reportsSlice = createSlice({\r\n    name: 'baerResults',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n     newReport: (state, protocol, infiltrometerType) => {\r\n      // Push a new report onto the report stack and increment the id\r\n      state.reports.push(\r\n        {\r\n            id: state.curId++,\r\n            date: new Date(),\r\n            protocol: protocol,\r\n            readings: [],\r\n            infiltrometerType: infiltrometerType\r\n        }\r\n      );\r\n\r\n    },\r\n    addReading: (state, reading, id)=>{\r\n        state.reports[id].readings.push(reading); \r\n    }\r\n  }\r\n});\r\nexport default reportsSlice.reducer;",{"ruleId":"70","severity":1,"message":"71","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"78","line":2,"column":9,"nodeType":"72","messageId":"73","endLine":2,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},"no-unused-vars","'createAsyncThunk' is defined but never used.","Identifier","unusedVar","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'TimerStateValues' is defined but never used.","no-global-assign","no-unsafe-negation"]